;W800 SW-R1BD001
;Библиотека функций
;
;(c) Hussein , IronMaster
;(p) HierOS

+451FFC00
0448: FFFFFFFF 8D2FB444 ; 112: void* memset( void* mem, char chr, int size );
044C: FFFFFFFF 609D0644 ; 113: int memcpy( void* dest, const void* source, int cnt );
0450: FFFFFFFF B53AB444 ; 114: int sprintf( char* buf, const char* fmt, ... );
0454: FFFFFFFF 9941B444 ; 115: int snwprintf( wchar_t* buffer, int size, const wchar_t* fmt, ... );
0458: FFFFFFFF 29570E45 ; 116: int _fopen( const wchar_t* filpath, const wchar_t* filname, unsigned int mode, unsigned int rights, FILELISTITEM* destfname);
045C: FFFFFFFF 09690E45 ; 117: int fclose( int file );
0460: FFFFFFFF 256C0E45 ; 118: int fread( int file, void* ptr, int size );
0464: FFFFFFFF C16E0E45 ; 119: int fwrite( int file, const void* ptr, int size );
;0468: xxxxxxxx yyyyyyyy ; 11A:
;046C: xxxxxxxx yyyyyyyy ; 11B:
0470: FFFFFFFF E95F0E45 ; 11C: int fstat( const wchar_t* path, const wchar_t* fname, FSTAT* fstat_stuct );
0474: FFFFFFFF A13C0E45 ; 11D: DIR_HANDLE* AllocDirHandle( const wchar_t* path );
0478: FFFFFFFF 453E0E45 ; 11E: FILELISTITEM* GetFname( DIR_HANDLE*, FILELISTITEM* );
047C: FFFFFFFF 7955E244 ; 11F: void* DataBrowserDesc_Create( void );
0480: FFFFFFFF 9153E244 ; 120: void DataBrowserDesc_SetItemStyle( void* DataBrowserDesc, int style );
0484: FFFFFFFF 2154E244 ; 121: void DataBrowserDesc_SetHeaderText( void* DataBrowserDesc, TEXTID );
0488: FFFFFFFF D953E244 ; 122: void DataBrowserDesc_SetFolders( void* DataBrowserDesc, const wchar_t** FolderList );
048C: FFFFFFFF 4554E244 ; 123: void DataBrowserDesc_SetOKSoftKeyText( void* DataBrowserDesc, TEXTID );
0490: FFFFFFFF E545E244 ; 124: void DataBrowser_Create( void* DataBrowserDesc );
0494: FFFFFFFF 0156E244 ; 125: void DataBrowserDesc_Destroy( void* DataBrowserDesc );
0498: FFFFFFFF D97F0E45 ; 126: wchar_t* getFileExtention( wchar_t* fname );
049C: FFFFFFFF D9400E45 ; 127: int DataBrowser_isFileInListExt( const wchar_t* ext_table, const wchar_t* path, const wchar_t* fname );
04A0: FFFFFFFF DD1DE844 ; 128: void Timer_ReSet( u16* timer, int time, TIMERPROC onTimer, LPARAM lparam );
04A4: FFFFFFFF A51DE844 ; 129: u16 Timer_Set( int time, TIMERPROC onTimer, LPARAM lparam );
04A8: FFFFFFFF 2D1EE844 ; 12A: void Timer_Kill( u16* timerID );
04AC: FFFFFFFF 652AE844 ; 12B: int CreateBook( BOOK* pbook, void (*onClose)( BOOK* ), const PAGE_DESC* bp, const char* name, int ParentBookID, const APP_DESC* appdesc );
04B0: FFFFFFFF 7D2BE844 ; 12C: void BookObj_KillBook( BOOK* book );
04B4: FFFFFFFF BD27E844 ; 12D: void BookObj_GotoPage( BOOK* book, const PAGE_DESC* page );
04B8: FFFFFFFF 4529E844 ; 12E: void BookObj_ReturnPage( BOOK* book, int );
04BC: FFFFFFFF 9130E844 ; 12F: void FreeBook( BOOK* book );
04C0: FFFFFFFF C9B40545 ; 130: BOOK* FindBook( IS_NEEDED_BOOK );
04C4: FFFFFFFF F579EA44 ; 131: BOOK* Find_StandbyBook( void );
04C8: FFFFFFFF F52CE844 ; 132: void BookObj_SetFocus( BOOK* book, int display );
04CC: FFFFFFFF C596D344 ; 133: void GUIObject_SetTitleText( GUI*, TEXTID );
04D0: FFFFFFFF C995D344 ; 134: void GUIObject_Show( GUI* );
04D4: FFFFFFFF D142D644 ; 135: void ListMenu_SetCursorToItem( GUI_LIST*, int item );
04D8: FFFFFFFF 1996D344 ; 136: void GUIObject_SetStyle( GUI*, int style );
04DC: FFFFFFFF A549D644 ; 137: int GUIonMessage_GetCreatedItemIndex( GUI_MESSAGE* msg );
04E0: FFFFFFFF B549D644 ; 138: char GUIonMessage_SetMenuItemText( GUI_MESSAGE* msg, TEXTID );
04E4: FFFFFFFF E549D644 ; 139: char GUIonMessage_SetMenuItemSecondLineText( GUI_MESSAGE* msg, TEXTID );
04E8: FFFFFFFF C549D644 ; 13A: char GUIonMessage_SetMenuItemInfoText( GUI_MESSAGE* msg, TEXTID );
04EC: FFFFFFFF D549D644 ; 13B: char GUIonMessage_SetMenuItemUnavailableText( GUI_MESSAGE* msg, TEXTID );
04F0: FFFFFFFF F549D644 ; 13C: void GUIonMessage_SetMenuItemIcon( GUI_MESSAGE* msg, int align, IMAGEID );
04F4: FFFFFFFF B1BEE844 ; 13D: void DispObject_SetTitleText( DISP_OBJ*, TEXTID );
04F8: FFFFFFFF E542D644 ; 13E: int ListMenu_GetSelectedItem( GUI_LIST* );
04FC: FFFFFFFF 3143D644 ; 13F: void ListMenu_SetItemStyle( GUI_LIST*, int style );
0500: FFFFFFFF 1932D444 ; 140: void GC_PutChar( GC* gc, int x, int y, int _zero, int zero1, wchar_t wchar );
0504: FFFFFFFF 8D8CD444 ; 141: int IsScreenSaverBook( BOOK* bk );
0508: FFFFFFFF 59DAD344 ; 142: void StatusIndication_SetItemText( GUI*, int item, TEXTID );
050C: FFFFFFFF 4597EA44 ; 143: void StatusIndication_ShowNotes( TEXTID );
0510: FFFFFFFF 6189D544 ; 144: GUI* CreateStringInputVA( int, ... );
0514: FFFFFFFF B158D644 ; 145: GUI_ONEOFMANY* CreateOneOfMany( BOOK* book );
0518: FFFFFFFF 7DEED344 ; 146: void OneOfMany_SetItemCount( GUI_ONEOFMANY*, int count );
051C: FFFFFFFF 0D5AD644 ; 147: void OneOfMany_SetChecked( GUI_ONEOFMANY*, int checked );
0520: FFFFFFFF 355AD644 ; 148: void OneOfMany_SetTexts( GUI_ONEOFMANY*, TEXTID* strids, int Count );
0524: FFFFFFFF 2DEFD344 ; 149: int OneOfMany_GetSelected( GUI_ONEOFMANY* );
0528: FFFFFFFF 6196EA44 ; 14A: void StatusIndication_Item8_SetText( TEXTID );
052C: FFFFFFFF 09ADD344 ; 14B: void GUIObject_SoftKeys_SetAction( GUI*, u16 actionID, SKACTIONPROC proc );
0530: FFFFFFFF F1ADD344 ; 14C: void GUIObject_SoftKeys_SetText( GUI*, u16 actionID, TEXTID );
0534: FFFFFFFF B5ADD344 ; 14D: void GUIObject_SoftKeys_SetEnable( GUI*, u16 actionID, BOOL );
0538: FFFFFFFF 8DB0D344 ; 14E: void GUIObject_SoftKeys_AddErrorStr( GUI*, u16 actionID, TEXTID );
053C: FFFFFFFF D9B0D344 ; 14F: void GUIObject_SoftKeys_RemoveItem( GUI*, u16 actionID );
0540: FFFFFFFF 89AED344 ; 150: void GUIObject_SoftKeys_SetVisible( GUI*, u16 actionID, BOOL );
0544: FFFFFFFF 4DB3D344 ; 151: void GUIObject_SoftKeys_SuppressDefaultAction( GUI*, u16 actionID );
0548: FFFFFFFF 5D07BF44 ; 152: wchar_t* wstrcpy( wchar_t* dest, const wchar_t* source );
054C: FFFFFFFF A507BF44 ; 153: wchar_t* wstrncpy( wchar_t* dest, const wchar_t* source, int maxlen );
0550: FFFFFFFF 0508BF44 ; 154: wchar_t* wstrcat( wchar_t* wstr, const wchar_t* subwstr );
0554: FFFFFFFF 5108BF44 ; 155: wchar_t* wstrncat( wchar_t* wstr, const wchar_t* subwstr, int maxlen );
0558: FFFFFFFF 0D07BF44 ; 156: int wstrcmp( const wchar_t* wstr1, const wchar_t* wstr2 );
055C: FFFFFFFF E106BF44 ; 157: int wstrlen( const wchar_t* wstr );
0560: FFFFFFFF B11BBF44 ; 158: wchar_t* str2wstr( wchar_t* wstr, const char* str );
0564: FFFFFFFF 193FB444 ; 159: int strcmp( const char* str1, const char* str2 );
0568: FFFFFFFF 813FB444 ; 15A: int strlen( const char* str );
056C: FFFFFFFF 4509BF44 ; 15B: char* wstr2strn( char* str, const wchar_t* wstr, int maxlen );
0570: FFFFFFFF F53DEF44 ; 15C: TEXTID TextID_CreateIntegerID( int num );
0574: FFFFFFFF C541EF44 ; 15D: TEXTID TextID_Create( const void* wstr, TEXT_ENCODING flag, int len );
0578: FFFFFFFF 954EEF44 ; 15E: void TextID_GetString( TEXTID, char* str, int maxlen );
057C: FFFFFFFF 5146EF44 ; 15F: int TextID_GetWString( TEXTID, wchar_t* dest, int maxlen );
0580: FFFFFFFF 3145EF44 ; 160: int TextID_GetLength( TEXTID );
0584: FFFFFFFF 9D44EF44 ; 161: void TextID_Destroy( TEXTID );
0588: FFFFFFFF 254EDF44 ; 162: int AB_DEFAULTNBR_GET( int rec_num, void* mem_0x30, int* unk );
058C: FFFFFFFF A970DF44 ; 163: int AB_READSTRING( AB_STR_ITEM*, int rec_num, int field_ID );
0590: FFFFFFFF 8577DF44 ; 164: int AB_READPHONENBR( AB_NUM_ITEM*, int rec_num, int field_ID );
0594: FFFFFFFF D178DF44 ; 165: int AB_GETNBROFITEMS( int get_from, int sub_id );
0598: FFFFFFFF 693AEF44 ; 166: int PNUM_len( void* pnum );
059C: FFFFFFFF DD3DF344 ; 167: void PNUM2str( char* str, void* pnum, int len, int max_len );
05A0: FFFFFFFF 8167EA44 ; 168: DISP_OBJ* GUIObject_GetDispObject( GUI* );
05A4: FFFFFFFF 0173E544 ; 169: LIST* List_Create( void );
05A8: FFFFFFFF 2573E544 ; 16A: void List_Destroy( LIST* lst );
05AC: FFFFFFFF 4574E544 ; 16B: int List_InsertFirst( LIST* lst, void* item );
05B0: FFFFFFFF 1139F544 ; 16C: int Gif2ID( u16 IMAGEHANDLE, const wchar_t* path, const wchar_t* fname, IMAGEID* );
05B4: FFFFFFFF 11EB0D45 ; 16D: int REQUEST_IMAGEHANDLER_INTERNAL_GETHANDLE( const int* sync, u16* ImageHandler, char* unk );
05B8: FFFFFFFF A5710C45 ; 16E: void REQUEST_DATEANDTIME_GET( const int* sync, DATETIME* dt );
05BC: FFFFFFFF B9ED0545 ; 16F: void IndicationDevice_Backlight_FadeToLevel( int unk_zero, int bl_level );
05C0: FFFFFFFF F138F844 ; 170: int GetFreeBytesOnHeap( void );
05C4: FFFFFFFF 252DE844 ; 171: void BookObj_Hide( BOOK* book, int display );
05C8: FFFFFFFF 392DE844 ; 172: void BookObj_Show( BOOK* book, int display );
05CC: FFFFFFFF 55DAD344 ; 173: void StartAPP( const wchar_t* appname ); //nullsub(void)
05D0: FFFFFFFF 3144D644 ; 174: void ListMenu_SetOnMessage( GUI_LIST*, int (*proc)( GUI_MESSAGE* ) );
05D4: FFFFFFFF E5E50845 ; 175: char* manifest_GetParam( const char* buf, const char* param_name, int unk );
05D8: FFFFFFFF 4D700E45 ; 176: int lseek( int file, int offset, int mode );
05DC: FFFFFFFF 4CEA084C ;8177: int get_VBUFFER( void );
05E0: FFFFFFFF CD5AEB44 ; 178: void SetLampLevel( int level );
05E4: FFFFFFFF CD73E544 ; 179: void* List_RemoveAt( LIST* lst, int index );
05E8: FFFFFFFF CD1C0344 ; 17A: PROCESS GetCurrentPID( void );
05EC: FFFFFFFF 0574E544 ; 17B: int List_IndexOf( LIST* lst, void* item );
05F0: FFFFFFFF A88C0644 ; 17C: union SIGNAL* alloc( OSBUFSIZE size, SIGSELECT signo );
05F4: FFFFFFFF C48C0644 ; 17D: union SIGNAL* receive( const SIGSELECT* sigsel );
05F8: FFFFFFFF B48C0644 ; 17E: void send( union SIGNAL** sig, PROCESS to );
05FC: FFFFFFFF 048D0644 ; 17F: PROCESS sender( union SIGNAL** sig );
0600: FFFFFFFF E48C0644 ; 180: void free_buf( union SIGNAL** sig );
0604: FFFFFFFF A08D0644 ; 181: PROCESS create_process( PROCESS_TYPE proc_type, char* name, OSENTRYPOINT* entrypoint, OSADDRESS stack_size, OSPRIORITY priority, OSTIME timeslice, PROCESS pid_block, void* redir_table, OSVECTOR vector, OSUSER user );
0608: FFFFFFFF C08F0644 ; 182: void start( PROCESS pid );
060C: FFFFFFFF 708E0644 ; 183: int get_ptype( PROCESS pid );
0610: FFFFFFFF BC8D0644 ; 184: PROCESS current_process( void );
0614: FFFFFFFF F48C0644 ; 185: void delay( OSTIME timeout );
0618: FFFFFFFF BC8E0644 ; 186: OSBOOLEAN hunt( const char* name, OSUSER user, PROCESS* name_, union SIGNAL** hunt_sig );
061C: FFFFFFFF E88E0644 ; 187: void kill_proc( PROCESS pid );
;0620: xxxxxxxx yyyyyyyy ; 188:
;0624: xxxxxxxx yyyyyyyy ; 189: union SIGNAL* receive_w_tmo( OSTIME timeout, SIGSELECT* sel );
;0628: xxxxxxxx yyyyyyyy ; 18A:
;062C: xxxxxxxx yyyyyyyy ; 18B: void stop( PROCESS pid );
0630: FFFFFFFF 3C8E0644 ; 18C: OSBOOLEAN get_mem( PROCESS pid, OSADDRESS from, void* to, OSADDRESS size );
0634: FFFFFFFF AF1A0344 ; 18D: OSADDRESS get_envp( PROCESS pid, char* name );
0638: FFFFFFFF C31A0344 ; 18E: OSBOOLEAN set_envp( PROCESS pid, char* name, OSADDRESS value );
063C: FFFFFFFF F48D0644 ; 18F: PROCESS get_bid( PROCESS pid );
0640: FFFFFFFF ED7FE444 ; 190: int datetime2unixtime( DATETIME* dt );
;0644: xxxxxxxx yyyyyyyy ; 191:
;0648: xxxxxxxx yyyyyyyy ; 192:
;064C: xxxxxxxx yyyyyyyy ; 193:
;0650: xxxxxxxx yyyyyyyy ; 194:
;0654: xxxxxxxx yyyyyyyy ; 195:
;0658: xxxxxxxx yyyyyyyy ; 196:
;065C: xxxxxxxx yyyyyyyy ; 197:
;0660: xxxxxxxx yyyyyyyy ; 198:
;0664: xxxxxxxx yyyyyyyy ; 199:
;0668: xxxxxxxx yyyyyyyy ; 19A:
;066C: xxxxxxxx yyyyyyyy ; 19B:
;0670: xxxxxxxx yyyyyyyy ; 19C:
;0674: xxxxxxxx yyyyyyyy ; 19D:
;0678: xxxxxxxx yyyyyyyy ; 19E:
;067C: xxxxxxxx yyyyyyyy ; 19F:
0680: FFFFFFFF 493FB444 ; 1A0: char* strcpy( char* dest, const char* source );
;0684: xxxxxxxx yyyyyyyy ; 1A1:
;0688: xxxxxxxx yyyyyyyy ; 1A2:
;068C: xxxxxxxx yyyyyyyy ; 1A3:
;0690: xxxxxxxx yyyyyyyy ; 1A4:
;0694: xxxxxxxx yyyyyyyy ; 1A5:
0698: FFFFFFFF B5FA1445 ; 1A6: char* UIEventName( int event );
069C: FFFFFFFF 01AE284C ;81A7: char* MissedEvents( void );
06A0: FFFFFFFF E5B50545 ; 1A8: void UI_Event( int event );
06A4: FFFFFFFF F1B50545 ; 1A9: void UI_Event_wData( int event, void* message, void (*free_proc)( void* ) );
06A8: FFFFFFFF 15B60545 ; 1AA: void UI_Event_toBookID( int event, int BookID );
06AC: FFFFFFFF 25B60545 ; 1AB: void UI_Event_toBookIDwData( int event, int BookID, void* message, void (*free_proc)( void* ) );
06B0: FFFFFFFF 0977E544 ; 1AC: int List_Find( LIST* lst, void* itemtofind, LISTFINDCALLBACK cmp_proc );
06B4: FFFFFFFF D575E544 ; 1AD: void* List_Get( LIST* lst, int index );
06B8: FFFFFFFF C91CBF44 ; 1AE: wchar_t* wstrrchr( const wchar_t* wstr, wchar_t wchar );
06BC: FFFFFFFF 3D28E844 ; 1AF: void BookObj_CallSubroutine( BOOK* book, BOOK_SUBROUTINE* subr );
06C0: FFFFFFFF 5574E544 ; 1B0: int List_InsertLast( LIST* lst, void* item );
06C4: FFFFFFFF 7D8AAC44 ; 1B1: void debug_printf( const char* fmt, ... );
06C8: FFFFFFFF 0DD7D344 ; 1B2: int PlayFile( const wchar_t* path, const wchar_t* fname );
;06CC: xxxxxxxx yyyyyyyy ; 1B3:
06D0: FFFFFFFF 71D31545 ; 1B4: int REQUEST_PROFILE_GETACTIVEPROFILE( const int* sync, int* level );
06D4: FFFFFFFF CDD31545 ; 1B5: int Profile_SetActive( int NUMprof, int set_in_gdfs_flag );
;06D8: xxxxxxxx yyyyyyyy ; 1B6:
06DC: FFFFFFFF E97AD444 ; 1B7: int isKeylocked( void );
06E0: FFFFFFFF C10DF744 ; 1B8: int IsMediaPlayerVideoBook( BOOK* bk );
;06E4: xxxxxxxx yyyyyyyy ; 1B9:
;06E8: xxxxxxxx yyyyyyyy ; 1BA:
;06EC: xxxxxxxx yyyyyyyy ; 1BB:
06F0: FFFFFFFF 05740C45 ; 1BC: int REQUEST_DATEFORMAT_GET( const int* sync, char* DateFormat );
06F4: FFFFFFFF A5740C45 ; 1BD: int REQUEST_TIMEFORMAT_GET( const int* sync, char* TimeFormat );
06F8: FFFFFFFF 6133D344 ; 1BE: TEXTID Date2ID( DATE*, int DateFormat, int );
06FC: FFFFFFFF 7932D344 ; 1BF: TEXTID Time2ID( TIME*, char TimeFormat, int isSec );
0700: FFFFFFFF 4541D644 ; 1C0: GUI_LIST* CreateListMenu( BOOK*, int display );
0704: FFFFFFFF 0143D644 ; 1C1: void ListMenu_SetItemCount( GUI_LIST*, int item_count );
0708: FFFFFFFF F427184C ;81C2: LIST** ROOT_APP( void );
070C: FFFFFFFF 61AFD344 ; 1C3: void GUIObject_SoftKeys_SetInfoText( GUI*, u16 actionID, TEXTID );
0710: FFFFFFFF ADAFD344 ; 1C4: void GUIObject_SoftKeys_SetItemAsSubItem( GUI*, u16 actionID, int subitem );
0714: FFFFFFFF 15131545 ; 1C5: int REQUEST_SYSTEM_SHUTDOWN( void );
0718: FFFFFFFF 25131545 ; 1C6: int REQUEST_SYSTEM_RESTART( void );
071C: FFFFFFFF 39AED344 ; 1C7: void GUIObject_SoftKeys_SetTexts( GUI*, u16 actionID, TEXTID short_text, TEXTID full_text );
0720: FFFFFFFF C1871245 ; 1C8: int IsRightNowBook( BOOK* book );
0724: FFFFFFFF FD0F1545 ; 1C9: int IsVolumeControllerBook( BOOK* book );
0728: FFFFFFFF DDB5D344 ; 1CA: GUI_TABMENUBAR* CreateTabMenuBar( BOOK* book );
072C: FFFFFFFF FDB6D344 ; 1CB: void TabMenuBar_SetTabCount( GUI_TABMENUBAR*, int count );
0730: FFFFFFFF E9B7D344 ; 1CC: void TabMenuBar_SetTabGui( GUI_TABMENUBAR*, int tab, GUI* );
0734: FFFFFFFF 59B8D344 ; 1CD: void TabMenuBar_SetTabIcon( GUI_TABMENUBAR*, int tab, IMAGEID, int for_state );
0738: FFFFFFFF 3965EA44 ; 1CE: GUI* GUIObject_Destroy( GUI* );
073C: FFFFFFFF 4999D344 ; 1CF: void GUIInput_SetIcon( GUI*, IMAGEID );
0740: FFFFFFFF 2196D544 ; 1D0: int StringInput_GetStringAndLen( GUI*, wchar_t**, u16* );
0744: FFFFFFFF D82B184C ;81D1: PAudioControl* GetAudioControlPtr( void );
0748: FFFFFFFF A157F044 ; 1D2: int AudioControl_Vibrate( PAudioControl pIAudioControl, int vibratime, int pausetime, int totaltime );
074C: FFFFFFFF 957F0E45 ; 1D3: int GetVolumeSize( wchar_t* root_folder, VOLUMESIZE* );
0750: FFFFFFFF 2956D644 ; 1D4: GUI_NOFMANY* CreateNOfMany( BOOK* book );
0754: FFFFFFFF F957D644 ; 1D5: void NOfMany_SetTexts( GUI_NOFMANY*, TEXTID* strids, int items_count );
0758: FFFFFFFF 5D57D644 ; 1D6: void NOfMany_SetChecked( GUI_NOFMANY*, u16* checked_table, int items_count );
075C: FFFFFFFF 1D57D644 ; 1D7: void NOfMany_SetCursor( GUI_NOFMANY*, int item );
0760: FFFFFFFF 8557D644 ; 1D8: int NOfMany_GetCheckedCount( GUI_NOFMANY* );
0764: FFFFFFFF 7157D644 ; 1D9: int NOfMany_GetChecked( GUI_NOFMANY*, u16* buffer );
0768: FFFFFFFF F157D644 ; 1DA: void NOfMany_SetOnMessage( GUI_NOFMANY*, int (*proc)( GUI_MESSAGE* ) );
;076C: xxxxxxxx yyyyyyyy ; 1DB:
;0770: xxxxxxxx yyyyyyyy ; 1DC:
;0774: xxxxxxxx yyyyyyyy ; 1DD:
;0778: xxxxxxxx yyyyyyyy ; 1DE:
077C: FFFFFFFF 91190244 ; 1DF: PAudioControl AudioControl_Init( void ); //nullsub(ret 0)
0780: FFFFFFFF CD59D644 ; 1E0: void OneOfMany_SetFocused( GUI_ONEOFMANY*, int item );
0784: FFFFFFFF 2D5AD644 ; 1E1: void OneOfMany_SetOnMessage( GUI_ONEOFMANY*, int (*proc)( GUI_MESSAGE* ) );
0788: FFFFFFFF 81BDD344 ; 1E2: GUI_FEEDBACK* CreateMonitorFeedback( TEXTID, BOOK*, void (*onbusy)(BOOK*), void (*onedit)(BOOK*), void (*ondelete)(BOOK*) );
078C: FFFFFFFF 2DBED344 ; 1E3: void Feedback_SetText( GUI_FEEDBACK*, TEXTID );
0790: FFFFFFFF C1467144 ; 1E4: int GetBatteryState( void* unused, BATT* );
0794: FFFFFFFF 3927D444 ; 1E5: GC* get_DisplayGC( void );
0798: FFFFFFFF 29A4E844 ; 1E6: void DispObject_GetRect( DISP_OBJ*, RECT* );
079C: FFFFFFFF 0D2DD444 ; 1E7: void GC_GetRect( GC* gc, RECT* );
07A0: FFFFFFFF 2130D444 ; 1E8: int GC_GetXX( GC* gc );
07A4: FFFFFFFF 1530D444 ; 1E9: void GC_SetXX( GC* gc, int );
07A8: FFFFFFFF B52CD444 ; 1EA: void GC_ValidateRect( GC* gc, RECT* );
07AC: FFFFFFFF 052EE844 ; 1EB: void BookObj_AddGUIObject( BOOK* book, GUI* );
07B0: FFFFFFFF 71D9E844 ; 1EC: void DrawRect( int x1, int y1, int x2, int y2, int pen_color, int brush_color );
07B4: FFFFFFFF 79DDE844 ; 1ED: void DrawString( TEXTID, int align, int x1, int y1, int x2, int y2, int unk, int unk1, int pen_color, int brush_color );
07B8: FFFFFFFF F168EA44 ; 1EE: void XGUIList_AddGUIObject( XGUILIST* xguilist, GUI* );
07BC: FFFFFFFF A9A2E844 ; 1EF: void DispObject_InvalidateRect( DISP_OBJ*, RECT* );
07C0: FFFFFFFF C164EA44 ; 1F0: int GUIObject_Create( GUI*, void (*GuiDestroy)( GUI* ), void (*DispDescCreate)( DISP_DESC* ), BOOK*, void (*DispObjCallBack)( DISP_OBJ*, void* msg, GUI* ), int display, int size_of_gui );
07C4: FFFFFFFF CDE8E844 ; 1F1: int SetFont( int );
07C8: FFFFFFFF 5427184C ;81F2: DISP_OBJ** StatusRow_p( void );
07CC: FFFFFFFF BDB50545 ; 1F3: int root_list_get_session_count( void );
07D0: FFFFFFFF D1B50545 ; 1F4: UI_APP_SESSION* root_list_get_session( int num_session );
07D4: FFFFFFFF E9AE0545 ; 1F5: BOOK* SESSION_GetTopBook( UI_APP_SESSION* );
07D8: FFFFFFFF A9C5D344 ; 1F6: int MainInput_getVisible( GUI* );
07DC: FFFFFFFF B5C5D344 ; 1F7: int MainInput_strlen( GUI* );
07E0: FFFFFFFF C9C5D344 ; 1F8: char* MainInput_getPNUM( GUI* );
07E4: FFFFFFFF D5C5D344 ; 1F9: int MainInput_isPlus( GUI* );
07E8: FFFFFFFF E531E844 ; 1FA: int BookObj_GetBookID( BOOK* book );
07EC: FFFFFFFF 3D1CBF44 ; 1FB: int wstrncmp( const wchar_t*, const wchar_t*, int );
07F0: FFFFFFFF 6DBDE844 ; 1FC: int DispObject_GetAbsoluteXPos( DISP_OBJ* );
07F4: FFFFFFFF 95BDE844 ; 1FD: int DispObject_GetAbsoluteYPos( DISP_OBJ* );
;07F8: xxxxxxxx yyyyyyyy ; 1FE:
07FC: FFFFFFFF F92E0645 ; 1FF: int GetThemeColor( int, int );
0800: FFFFFFFF 79CB1545 ; 200: int REQUEST_SETTING_SILENCE_SET( const int* sync, u16 profile, u16 value );
0804: FFFFFFFF 1DCB1545 ; 201: int REQUEST_SETTING_SILENCE_GET( const int* sync, u16 profile, char* silence_mode );
0808: FFFFFFFF E58DDE44 ; 202: void VCALL_Init( void* vc );
080C: FFFFFFFF D98EDE44 ; 203: void VCALL_SetName( void* vc, wchar_t* name, unsigned short name_len );
0810: FFFFFFFF 358FDE44 ; 204: void VCALL_SetNameIcon( void* vc, IMAGEID );
0814: FFFFFFFF F98EDE44 ; 205: void VCALL_SetNumber( void* vc, wchar_t* number, unsigned short num_len );
0818: FFFFFFFF 218FDE44 ; 206: void VCALL_SetHZ1( void* vc, int, u16 );
081C: FFFFFFFF 2D8FDE44 ; 207: void VCALL_SetHZ2( void* vc, u16 );
0820: FFFFFFFF 9D85DE44 ; 208: void MakeVoiceCall( int SessioID, void* vc, int flag );
;0824: xxxxxxxx yyyyyyyy ; 209:
0828: FFFFFFFF 3D610E45 ; 20A: void FileDelete( wchar_t* path, wchar_t* filename, int* error );
082C: FFFFFFFF DD97D344 ; 20B: void GUIObject_SetFocus( GUI*, int );
0830: FFFFFFFF E11CFA44 ; 20C: int MSG_SendMessage_CreateMessage( int, void* );
0834: FFFFFFFF 7921FA44 ; 20D: int MSG_SendMessage_DestroyMessage( void* );
0838: FFFFFFFF 411EFA44 ; 20E: int MSG_SendMessage_AddRecipient( void*, wchar_t*, wchar_t*, int, int );
083C: FFFFFFFF C920FA44 ; 20F: int MSG_SendMessage_Start( int, void*, int );
0840: FFFFFFFF 044D2444 ;8210: void* get_APP_DESC_TABLE( void );
;0844: xxxxxxxx yyyyyyyy ; 211:
0848: FFFFFFFF ED7DDF44 ; 212: int AB_POSITIONNBR_GET( void* ab_name, char*, u16*, void* ab_num );
084C: FFFFFFFF 917ADF44 ; 213: TEXTID AB_NAME_ITEM2TextID( AB_STR_ITEM* ab_name );
0850: FFFFFFFF F97ADF44 ; 214: TEXTID AB_NUM_ITEM2TextID( AB_NUM_ITEM* ab_num_item );
0854: FFFFFFFF B1430A45 ; 215: int GetABRecNum( AB_GET_STRUCT* );
0858: FFFFFFFF 308F2144 ;8216: AB_ITEM_DESC* get_AB_ITEMS_DESC( void );
085C: FFFFFFFF 192A0B45 ; 217: GUI* SBY_GetMainInput( BOOK* StandBy ); // !!!!! не настоящий !!!!!!
0860: FFFFFFFF 152A0B45 ; 218: GUI* SBY_GetStatusIndication( BOOK* StandBy ); // !!!!! не настоящий !!!!!!
0864: FFFFFFFF ED9A0C45 ; 219: int REQUEST_PHONEBOOK_ACCESSSTATUS_TOTAL_GET( const int* sync, int* );
0868: FFFFFFFF E47B0C4C ;821A: PROCESS* PID_MMI( void );
;086C: xxxxxxxx yyyyyyyy ; 21B:
0870: FFFFFFFF 859DE844 ; 21C: GUI* DispObject_GetGUI( DISP_OBJ* );
0874: FFFFFFFF 119DE844 ; 21D: DISP_OBJ* Display_GetFocusedDispObject( int display );
0878: FFFFFFFF 5DA1E844 ; 21E: char DispObject_GetVisible( DISP_OBJ* );
087C: FFFFFFFF E5F50645 ; 21F: DISP_DESC* DispObject_GetDESC( DISP_OBJ* ); // !!!!! не настоящий !!!!!!
0880: FFFFFFFF DD94E844 ; 220: void DISP_DESC_SetName( DISP_DESC*, const char* name );
0884: FFFFFFFF 25BCE844 ; 221: char* DispObject_GetName( DISP_OBJ* );
0888: FFFFFFFF 0595E844 ; 222: void DISP_DESC_SetSize( DISP_DESC*, u16 size );
;088C: xxxxxxxx yyyyyyyy ; 223: u16 DISP_DESC_GetSize( DISP_OBJ* );
0890: FFFFFFFF 2595E844 ; 224: void DISP_DESC_SetOnCreate( DISP_DESC*, DISP_OBJ_ONCREATE_METHOD );
0894: FFFFFFFF D198E844 ; 225: DISP_OBJ_ONCREATE_METHOD DispObject_GetOnCreate( DISP_OBJ* );
0898: FFFFFFFF 4595E844 ; 226: void DISP_DESC_SetOnClose( DISP_DESC*, DISP_OBJ_ONCLOSE_METHOD );
089C: FFFFFFFF E598E844 ; 227: DISP_OBJ_ONCLOSE_METHOD DispObject_GetOnClose( DISP_OBJ* );
08A0: FFFFFFFF 6595E844 ; 228: void DISP_DESC_SetOnRedraw( DISP_DESC*, DISP_OBJ_ONREDRAW_METHOD );
08A4: FFFFFFFF F998E844 ; 229: DISP_OBJ_ONREDRAW_METHOD DispObject_GetOnRedraw( DISP_OBJ* );
08A8: FFFFFFFF A595E844 ; 22A: void DISP_DESC_SetOnKey( DISP_DESC*, DISP_OBJ_ONKEY_METHOD );
08AC: FFFFFFFF 2199E844 ; 22B: DISP_OBJ_ONKEY_METHOD DispObject_GetOnKey( DISP_OBJ* );
08B0: FFFFFFFF 8595E844 ; 22C: void DISP_DESC_SetOnRefresh( DISP_DESC*, DISP_OBJ_METHOD );
08B4: FFFFFFFF 0D99E844 ; 22D: DISP_OBJ_METHOD DispObject_GetonRefresh( DISP_OBJ* );
;08B8: xxxxxxxx yyyyyyyy ; 22E: void DISP_DESC_SetMethod04( DISP_DESC*, void (*)( void* ) );
;08BC: xxxxxxxx yyyyyyyy ; 22F: DISP_OBJ_METHOD DispObject_GetMethod04( DISP_OBJ* );
;08C0: xxxxxxxx yyyyyyyy ; 230: void DISP_DESC_SetMethod05( DISP_DESC*, void (*)( void* ) );
;08C4: xxxxxxxx yyyyyyyy ; 231: DISP_OBJ_METHOD DispObject_GetMethod05( DISP_OBJ* );
08C8: FFFFFFFF C595E844 ; 232: void DISP_DESC_SetMethod06( DISP_DESC*, DISP_OBJ_METHOD );
08CC: FFFFFFFF 3599E844 ; 233: DISP_OBJ_METHOD DispObject_GetMethod06( DISP_OBJ* );
;08D0: xxxxxxxx yyyyyyyy ; 234: void DISP_DESC_SetMethod07( DISP_DESC*, void (*)( void* ) );
;08D4: xxxxxxxx yyyyyyyy ; 235: DISP_OBJ_METHOD DispObject_GetMethod07( DISP_OBJ* );
08D8: FFFFFFFF 0596E844 ; 236: void DISP_DESC_SetOnLayout( DISP_DESC*, DISP_OBJ_METHOD );
08DC: FFFFFFFF 5D99E844 ; 237: DISP_OBJ_METHOD DispObject_GetOnLayout( DISP_OBJ* );
;08E0: xxxxxxxx yyyyyyyy ; 238: void DISP_DESC_SetOnConfig( DISP_DESC*, void (*)( void* ) );
;08E4: xxxxxxxx yyyyyyyy ; 239: DISP_OBJ_METHOD DispObject_GetOnConfig( DISP_OBJ* );
;08E8: xxxxxxxx yyyyyyyy ; 23A: void DISP_DESC_SetMethod0A( DISP_DESC*, void (*)( void* ) );
;08EC: xxxxxxxx yyyyyyyy ; 23B: DISP_OBJ_METHOD DispObject_GetMethod0A( DISP_OBJ* );
;08F0: xxxxxxxx yyyyyyyy ; 23C: void DISP_DESC_SetMethod0B( DISP_DESC*, void (*)( void* ) );
;08F4: xxxxxxxx yyyyyyyy ; 23D: DISP_OBJ_METHOD DispObject_GetMethod0B( DISP_OBJ* );
;08F8: xxxxxxxx yyyyyyyy ; 23E: void DISP_DESC_SetMethod0C( DISP_DESC*, void (*)( void* ) );
;08FC: xxxxxxxx yyyyyyyy ; 23F: DISP_OBJ_METHOD DispObject_GetMethod0C( DISP_OBJ* );
0900: FFFFFFFF 55DAD344 ; 240: void JavaSession_Manager( int cmd ); //nullsub(void)
0904: FFFFFFFF 91200345 ; 241: TEXTID JavaSession_GetName( void ); //nullsub(ret 0x6FFFFFFF)
0908: FFFFFFFF 3143EF44 ; 242: TEXTID TextID_Copy( TEXTID );
090C: FFFFFFFF D530E844 ; 243: UI_APP_SESSION* BookObj_GetSession( BOOK* book );
0910: FFFFFFFF 414AD644 ; 244: void GUIonMessage_SetNumberOfSubItems( GUI_MESSAGE* msg, int unk, int num_sub_items );
0914: FFFFFFFF B14AD644 ; 245: void GUIonMessage_SubItem_SetText( GUI_MESSAGE* msg, TEXTID );
0918: FFFFFFFF A14AD644 ; 246: int GUIonMessage_SubItem_GetCreatedParentIndex( GUI_MESSAGE* msg );
091C: FFFFFFFF A5C8D144 ; 247: void GoMusic( void );
;0920: xxxxxxxx yyyyyyyy ; 248: int GUIonMessage_SubItem_GetSelectedIndex( GUI_MESSAGE* msg );
;0924: xxxxxxxx yyyyyyyy ; 249: void GUIonMessage_SubItem_SetDisabled( GUI_MESSAGE* msg, BOOL state );
0928: FFFFFFFF 19D7D344 ; 24A: int PlayFileV( const wchar_t* path, const wchar_t* fname, int vol );
092C: FFFFFFFF 39A5F844 ; 24B: int GetSilent( void );
0930: FFFFFFFF F571F844 ; 24C: int GetVibrator( int ignorevibrator, int ignoresilent );
0934: FFFFFFFF 05B1F844 ; 24D: int GetAudioSettings( int what, char* retvalue );
0938: FFFFFFFF 292BA344 ; 24E: int GetChipID( void );
;093C: xxxxxxxx yyyyyyyy ; 24F:
;0940: xxxxxxxx yyyyyyyy ; 250:
;0944: xxxxxxxx yyyyyyyy ; 251:
0948: FFFFFFFF 914AD644 ; 252: int GUIonMessage_SubItem_GetCreatedIndex( GUI_MESSAGE* msg );
094C: FFFFFFFF 814AD644 ; 253: int GUIonMessage_SubItem_GetSelectedParentIndex( GUI_MESSAGE* msg );
0950: FFFFFFFF 1D400E45 ; 254: void DestroyDirHandle( DIR_HANDLE* handle );
0954: FFFFFFFF A0C72244 ;8255: DB_EXT* LastExtDB( void );
0958: FFFFFFFF 81740F45 ; 256: void GetOtherExtMethods( FILESUBROUTINE** );
095C: FFFFFFFF 21750645 ; 257: int MessageBox( TEXTID header_text, TEXTID message_text, IMAGEID, int style, int time, BOOK* book );
0960: FFFFFFFF A53B0645 ; 258: int Display_GetHeight( int display );
0964: FFFFFFFF B53B0645 ; 259: int Display_GetWidth( int display );
0968: FFFFFFFF 8DD6D344 ; 25A: void PlaySystemSound( int SndNumber );
;096C: xxxxxxxx yyyyyyyy ; 25B:
;0970: xxxxxxxx yyyyyyyy ; 25C:
0974: FFFFFFFF D5B6D344 ; 25D: int TabMenuBar_GetFocusedTab( GUI_TABMENUBAR* );
0978: FFFFFFFF A9B6D344 ; 25E: void TabMenuBar_SetFocusedTab( GUI_TABMENUBAR*, int tab_num );
097C: FFFFFFFF 212FD444 ; 25F: int GC_GetPenColor( GC* gc );
0980: FFFFFFFF E12ED444 ; 260: void GC_SetPenColor( GC* gc, int pen_color );
0984: FFFFFFFF 9F2BD444 ; 261: void GC_SetPixel( GC* gc, int x1, int y1, int color );
0988: FFFFFFFF 9D38D444 ; 262: void GC_DrawLine( GC* gc, int x1, int y1, int x2, int y2 );
098C: FFFFFFFF 313AD444 ; 263: void GC_DrawFRect( GC* gc, int color, int x1, int y1, int x2, int y2 );
0990: FFFFFFFF D92BD444 ; 264: int GC_WritePixels( GC* gc, int x1, int y1, int x2, int y2, int* bmp );
;0994: xxxxxxxx yyyyyyyy ; 265: png_structp png_create_read_struct_2( png_const_charp user_png_ver, png_voidp error_ptr, png_error_ptr error_fn, png_error_ptr warn_fn, png_voidp mem_ptr, png_malloc_ptr malloc_fn, png_free_ptr free_fn );
;0998: xxxxxxxx yyyyyyyy ; 266: void png_destroy_read_struct( png_structpp png_ptr_ptr, png_infopp info_ptr_ptr, png_infopp end_info_ptr_ptr );
;099C: xxxxxxxx yyyyyyyy ; 267: png_infop png_create_info_struct( png_structp png_ptr );
;09A0: xxxxxxxx yyyyyyyy ; 268: void png_destroy_info_struct( png_structp png_ptr, png_infopp info_ptr_ptr );
;09A4: xxxxxxxx yyyyyyyy ; 269: void png_set_progressive_read_fn( png_structp png_ptr, png_voidp progressive_ptr, png_progressive_info_ptr info_fn, png_progressive_row_ptr row_fn, png_progressive_end_ptr end_fn );
;09A8: xxxxxxxx yyyyyyyy ; 26A: void png_process_data( png_structp png_ptr, png_infop info_ptr, png_bytep buffer, png_size_t buffer_size );
;09AC: xxxxxxxx yyyyyyyy ; 26B: void png_read_update_info( png_structp png_ptr, png_infop info_ptr );
;09B0: xxxxxxxx yyyyyyyy ; 26C: png_voidp png_get_progressive_ptr( png_structp png_ptr );
;09B4: xxxxxxxx yyyyyyyy ; 26D: png_uint_32 png_get_IHDR( png_structp png_ptr, png_infop info_ptr, png_uint_32* width, png_uint_32* height, int* bit_depth, int* color_type, int* interlace_method, int* compression_method, int* filter_method );
;09B8: xxxxxxxx yyyyyyyy ; 26E: void png_set_strip_16( png_structp png_ptr );
;09BC: xxxxxxxx yyyyyyyy ; 26F: void png_set_gray_1_2_4_to_8( png_structp png_ptr );
;09C0: xxxxxxxx yyyyyyyy ; 270: void png_set_gray_to_rgb( png_structp png_ptr );
;09C4: xxxxxxxx yyyyyyyy ; 271: png_uint_32 png_get_valid( png_structp png_ptr, png_infop info_ptr, png_uint_32 flag );
;09C8: xxxxxxxx yyyyyyyy ; 272: void png_set_tRNS_to_alpha( png_structp png_ptr );
;09CC: xxxxxxxx yyyyyyyy ; 273: void png_set_filler( png_structp png_ptr, png_uint_32 filler, int flags );
;09D0: xxxxxxxx yyyyyyyy ; 274: void png_set_palette_to_rgb( png_structp png_ptr );
;09D4: xxxxxxxx yyyyyyyy ; 275: png_uint_32 png_get_rowbytes( png_structp png_ptr, png_infop info_ptr );
;09D8: xxxxxxxx yyyyyyyy ; 276: void png_progressive_combine_row( png_structp png_ptr, png_bytep old_row, png_bytep new_row );
;09DC: xxxxxxxx yyyyyyyy ; 277: int png_sig_cmp( png_bytep sig, png_size_t start, png_size_t num_to_check );
09E0: FFFFFFFF 94E20644 ; 278: int setjmp( jmp_buf jmpbuf );
09E4: FFFFFFFF B8E20644 ; 279: void longjmp( jmp_buf, int );
09E8: FFFFFFFF F36F0344 ; 27A: int inflateInit2_( z_streamp strm, int windowBits, const char* version, int stream_size );
09EC: FFFFFFFF C3700344 ; 27B: int inflate( z_streamp strm, int flush );
09F0: FFFFFFFF EB800344 ; 27C: int inflateEnd( z_streamp strm );
09F4: FFFFFFFF 212FB444 ; 27D: int memcmp( const void* m1, const void* m2, int n );
09F8: FFFFFFFF B93FB444 ; 27E: int strncmp( const char* s1, const char* s2, int len );
09FC: FFFFFFFF F53FB444 ; 27F: char* strncpy( char* dest, const char* source, int maxlen );
0A00: FFFFFFFF DD3EB444 ; 280: char* strcat( char* dest, const char* src );
0A04: FFFFFFFF AD96D344 ; 281: void GUIObject_SetTitleType( GUI*, int type );
0A08: FFFFFFFF 4D4AD644 ; 282: void GUIonMessage_SetItemDisabled( GUI_MESSAGE* msg, BOOL );
0A0C: FFFFFFFF 29EC0D45 ; 283: int REQUEST_IMAGEHANDLER_INTERNAL_REGISTER( const int* sync, u16 ImageHandler, wchar_t* path, wchar_t* fname, int unk, IMAGEID*, char* error );
0A10: FFFFFFFF A9ED0D45 ; 284: int REQUEST_IMAGEHANDLER_INTERNAL_UNREGISTER( const int* sync, u16 ImageHandler, u16*, u16*, IMAGEID, int unk_1, char* error );
;0A14: xxxxxxxx yyyyyyyy ;8285: SURFACE** get_Surfaces( void );
0A18: FFFFFFFF E902F044 ; 286: int iconidname2id( const wchar_t* idname, int maxnamelen, int* id );
0A1C: FFFFFFFF 2942DC44 ; 287: int textidname2id( const wchar_t* idname, int maxnamelen, TEXTID* id );
0A20: FFFFFFFF 55DAD344 ; 288: void ListMenu_SetNoItemText( GUI_LIST*, TEXTID str ); //nullsub(void)
;0A24: xxxxxxxx yyyyyyyy ; 289:
0A28: FFFFFFFF E9D41245 ; 28A: int IsFmRadioBook( BOOK* bk );
0A2C: FFFFFFFF 29BFF544 ; 28B: int IsAudioPlayerBook( BOOK* bk);
0A30: FFFFFFFF A114F644 ; 28C: void PlayerControl( BOOK* AudioPlayerBook, int );
0A34: FFFFFFFF A1B11245 ; 28D: void SwitchRadioStationFromList( BOOK* FmRadioBook, int );
0A38: FFFFFFFF 91ED0645 ; 28E: void Shortcut_Run( wchar_t* shortcut_name );
0A3C: FFFFFFFF 71330E45 ; 28F: int mkdir( const wchar_t* path );
0A40: FFFFFFFF 113A0E45 ; 290: int rmdir( const wchar_t* path, int zero );
0A44: FFFFFFFF 55600E45 ; 291: int chmod( const wchar_t* path, const wchar_t* fname, int amode );
0A48: FFFFFFFF A9650E45 ; 292: int rename( const wchar_t* oldpath, const wchar_t* oldfname, const wchar_t* newpath, const wchar_t* newfname, int zero );
0A4C: FFFFFFFF 15F0E844 ; 293: int GetImageWidth( IMAGEID );
0A50: FFFFFFFF 2DF0E844 ; 294: int GetImageHeight( IMAGEID );
0A54: FFFFFFFF F5F1F444 ; 295: void* CallID_GetCallStatusDesc( int CallID );
0A58: FFFFFFFF 29A4A644 ; 296: wchar_t* CallStatusDesc_GetName( void* CallStatusDesc );
0A5C: FFFFFFFF 4D77E544 ; 297: void List_DestroyElements( LIST* lst, int (*cmp_proc)( void* item ), void (*free_proc)( void* item ) );
0A60: FFFFFFFF 9140B444 ; 298: char* strstr( const char* str1, const char* str2 );
0A64: FFFFFFFF 85BAD744 ; 299: int GPRS_GetLastSessionInfo( int, GPRS_SESSION_INFO* );
0A68: FFFFFFFF D91DBF44 ; 29A: int wstrcmpni( const wchar_t* wstr1, const wchar_t* wstr2, int len );
0A6C: FFFFFFFF 713CD344 ; 29B: int wtoi( const wchar_t* wstr, int len, int* dest );
0A70: FFFFFFFF CD82E444 ; 29C: void DATE_GetWeekDay( DATE*, char* dest );
0A74: FFFFFFFF 6113BB44 ; 29D: void Cale_GetSettings( int setID, void* );
0A78: FFFFFFFF 0548B444 ; 29E: wchar_t* wstrwstr( const wchar_t* wstr1, const wchar_t* wstr2 );
0A7C: FFFFFFFF 511EBF44 ; 29F: int wstrcmpi( const wchar_t* ws1, const wchar_t* ws2 );
0A80: FFFFFFFF AD45B444 ; 2A0: wchar_t* wstrchr( const wchar_t* source, wchar_t chr );
0A84: FFFFFFFF 9923E844 ; 2A1: void GUIObject_SoftKeys_Hide( GUI* ); //nullsub(void)
0A88: FFFFFFFF 9923E844 ; 2A2: void GUIObject_SoftKeys_Show( GUI* ); //nullsub(void)
0A8C: FFFFFFFF C16DD344 ; 2A3: DISP_OBJ* DispObject_SoftKeys_Get( void );
0A90: FFFFFFFF A9E20545 ; 2A4: int StandbyBackground_SetImage( int type, int, int, const wchar_t* path, const wchar_t* fname, int );
0A94: FFFFFFFF 49E7D344 ; 2A5: GUI* CreateYesNoQuestionVA( int zero, ... );
0A98: FFFFFFFF D146D644 ; 2A6: void ListMenu_SetItemSecondLineText( GUI_LIST*, int elem_num, TEXTID );
0A9C: FFFFFFFF BD45B444 ; 2A7: void _REQUEST_OAF_START_APPLICATION( const int* sync, int __zero, MIDP_DESC*, int ___zero ); //nullsub(void)
0AA0: FFFFFFFF 757D0E45 ; 2A8: wchar_t* FSX_GetInvalidChar( wchar_t* name );
0AA4: FFFFFFFF FD53E244 ; 2A9: void DataBrowserDesc_SetFoldersNumber( void* DataBrowserDesc, int state );
0AA8: FFFFFFFF 6953E244 ; 2AA: void DataBrowserDesc_SetActions( void* DataBrowserDesc, char* actions );
0AAC: FFFFFFFF B951E244 ; 2AB: void DataBrowserDesc_SetSelectAction( void* DataBrowserDesc, int state );
0AB0: FFFFFFFF 4552E244 ; 2AC: void DataBrowserDesc_SetSelectActionOnFolders( void* DataBrowserDesc, int state );
0AB4: FFFFFFFF 3D51E244 ; 2AD: void DataBrowserDesc_SetBookID( void* DataBrowserDesc, int BookID );
0AB8: FFFFFFFF D550E244 ; 2AE: void DataBrowserDesc_SetItemFilter( void* DataBrowserDesc, DB_FILE_FILTER );
0ABC: FFFFFFFF B154E244 ; 2AF: void DataBrowserDesc_SetOption( void* DataBrowserDesc, char* option );
0AC0: FFFFFFFF F53DFC44 ; 2B0: void DataBrowserDesc_SetOpenEmptyFolder( void* DataBrowserDesc, int state );
0AC4: FFFFFFFF F950E244 ; 2B1: void DataBrowserDesc_SetFileExtList( void* DataBrowserDesc, const wchar_t* ExtList );
0AC8: FFFFFFFF 0143FF44 ; 2B2: void FSX_RemoveIllegalSymbolsName( FILEITEM* );
0ACC: FFFFFFFF 85A80F45 ; 2B3: FILEITEM* FILEITEM_Create( void );
0AD0: FFFFFFFF C5A90F45 ; 2B4: void FILEITEM_Destroy( FILEITEM* );
0AD4: FFFFFFFF F9BED344 ; 2B5: GUI* CreateDateInputVA( int zero, ... );
0AD8: FFFFFFFF 91E3D344 ; 2B6: GUI* CreateTimeInputVA( int zero, ... );
0ADC: FFFFFFFF 7D96D544 ; 2B7: void StringInput_SetCursorPosition( GUI*, u16 curs_pos, char unk );
0AE0: FFFFFFFF D528E844 ; 2B8: void BookObj_CallPage( BOOK* book, const PAGE_DESC* page );
0AE4: FFFFFFFF F1C0D344 ; 2B9: unsigned int DateInput_GetDateInt( GUI* );
0AE8: FFFFFFFF BDE5D344 ; 2BA: unsigned int TimeInput_GetTimeInt( GUI* );
0AEC: FFFFFFFF DC29184C ;82BB: FONT_DESC* GetFontDesc( void );
0AF0: FFFFFFFF 942B184C ;82BC: int* GetFontCount( void );
0AF4: FFFFFFFF 0930D444 ; 2BD: int GC_GetBrushColor( GC* gc );
0AF8: FFFFFFFF C92FD444 ; 2BE: void GC_SetBrushColor( GC* gc, int brush_color );
0AFC: FFFFFFFF ED3AD444 ; 2BF: void GC_DrawRoundRect( GC* gc, RECT*, int arcWidth, int arcHeight, int border_flag, int fill_flag );
0B00: FFFFFFFF 51DF0645 ; 2C0: BOOK* MenuBook_Desktop( int mode, int BookID );
0B04: FFFFFFFF D5EC0645 ; 2C1: wchar_t* MenuBook_Desktop_GetSelectedItemID( BOOK* MenuBook_Desktop );
0B08: FFFFFFFF ADBE0545 ; 2C2: void BookObj_SoftKeys_SetAction( BOOK* book, int actionID, SKACTIONPROC proc );
0B0C: FFFFFFFF F9BE0545 ; 2C3: void BookObj_SoftKeys_SetText( BOOK* book, int actionID, TEXTID );
0B10: FFFFFFFF 8DB40545 ; 2C4: BOOK* FindBookByID( int BookID );
0B14: FFFFFFFF B9DCD344 ; 2C5: GUI_FEEDBACK* TextFeedbackWindow( BOOK* book, int zero );
0B18: FFFFFFFF F9E0D344 ; 2C6: void Feedback_SetKeyHook( GUI_FEEDBACK*, void (*hook)( BOOK* book, int key, int unk, int unk2 ) );
0B1C: FFFFFFFF 99E0D344 ; 2C7: void Feedback_SetOnClose( GUI_FEEDBACK*, void (*OnClose)( BOOK* book ) );
0B20: FFFFFFFF E1E0D344 ; 2C8: void Feedback_SetTimeout( GUI_FEEDBACK*, int time_ms );
0B24: FFFFFFFF 71E1D344 ; 2C9: void Feedback_SetTextExtended( GUI_FEEDBACK*, TEXTID text, int where );
0B28: FFFFFFFF ED090745 ; 2CA: void TabMenuBar_SetOnTabSwitch( GUI_TABMENUBAR*, void (*proc)( BOOK*, int act_tab ) );
0B2C: FFFFFFFF 4104CB44 ; 2CB: TEXTID KeyCode2Name( int key_code );
0B30: FFFFFFFF 8131F544 ; 2CC: int ImageID_Get( const wchar_t* fpath, const wchar_t* fname, IMAGEID* );
0B34: FFFFFFFF 2135F544 ; 2CD: void ImageID_Free( IMAGEID );
0B38: FFFFFFFF A9B80E45 ; 2CE: SUB_EXECUTE* DataBrowser_CreateSubExecute( int BookID, FILEITEM* );
0B3C: FFFFFFFF FDBC0E45 ; 2CF: int DataBrowser_ExecuteSubroutine( SUB_EXECUTE* sub, int action, u16* unk );
0B40: FFFFFFFF 49AA0F45 ; 2D0: int FILEITEM_SetFname( FILEITEM*, const wchar_t* fname );
0B44: FFFFFFFF 71AE0F45 ; 2D1: int FILEITEM_SetPath( FILEITEM*, const wchar_t* fpath );
0B48: FFFFFFFF 39AE0F45 ; 2D2: wchar_t* FILEITEM_GetFname( FILEITEM* );
0B4C: FFFFFFFF 21AF0F45 ; 2D3: wchar_t* FILEITEM_GetPath( FILEITEM* );
0B50: FFFFFFFF 49AA0F45 ; 2D4: int FILEITEM_SetFnameAndContentType( FILEITEM*, const wchar_t* fname );
0B54: FFFFFFFF DDAE0F45 ; 2D5: int FILEITEM_SetPathAndContentType( FILEITEM*, const wchar_t* fpath );
0B58: FFFFFFFF 81B3C244 ; 2D6: int JavaDialog_Open( int unk1, char* unk2, void** JavaDesc );
0B5C: FFFFFFFF CDECC244 ; 2D7: void JavaDialog_Close( int unk1 );
0B60: FFFFFFFF 89EEC244 ; 2D8: int JavaAppDesc_Get( int unk1, void** JavaDesc );
0B64: FFFFFFFF F155C244 ; 2D9: int JavaAppDesc_GetFirstApp( void* JavaDesc );
0B68: FFFFFFFF 1556C244 ; 2DA: int JavaAppDesc_GetNextApp( void* JavaDesc );
0B6C: FFFFFFFF 1D52C244 ; 2DB: int JavaAppDesc_GetJavaAppInfo( void* JavaDesc, int ID, wchar_t** wstr );
;0B70: xxxxxxxx yyyyyyyy ; 2DC: void OrangeLED_Control( int _free_val, int or_LED_ID, int level, int fade_time );
0B74: FFFFFFFF 659EE844 ; 2DD: void DispObject_SetRefreshTimer( DISP_OBJ*, int time );
0B78: FFFFFFFF D19EE844 ; 2DE: void DispObject_KillRefreshTimer( DISP_OBJ* );
0B7C: FFFFFFFF E94CE244 ; 2DF: int IsDataBrowserBook( BOOK* book );
0B80: FFFFFFFF F98A0F45 ; 2E0: SUB_EXECUTE* BrowserItem_Get_SUB_EXECUTE( BOOK* BrowserItemBook );
0B84: FFFFFFFF 8192D444 ; 2E1: TEXTID Shortcut_Get_MenuItemName( void* );
0B88: FFFFFFFF 51EC0645 ; 2E2: IMAGEID Shortcut_Get_MenuItemIconID( void* );
0B8C: FFFFFFFF 41B50545 ; 2E3: BOOK* FindBookEx( int (*cmp_proc)( BOOK* book_from_list, int* param ), int* param );
0B90: FFFFFFFF B5A80F45 ; 2E4: FILEITEM* FILEITEM_CreateCopy( FILEITEM* );
0B94: FFFFFFFF E534F544 ; 2E5: IMAGEID ImageID_Copy( IMAGEID );
0B98: FFFFFFFF 7D30E844 ; 2E6: int BookObj_GetSessionID( BOOK* book );
0B9C: FFFFFFFF 05B60545 ; 2E7: void UI_Event_toSID( int event, int sess_id );
0BA0: FFFFFFFF 25CC6D44 ; 2E8: char* GetIMSI( void );
0BA4: FFFFFFFF 6D87D444 ; 2E9: void UI_CONTROLLED_SHUTDOWN_RESPONSE( int book_id );
;0BA8: xxxxxxxx yyyyyyyy ; 2EA: int MainInput_getCurPos( GUI* );
0BAC: FFFFFFFF 91C5D344 ; 2EB: void MainInput_Hide( GUI* );
0BB0: FFFFFFFF 2166D344 ; 2EC: void DispObject_SoftKeys_RestoreDefaultAction( DISP_OBJ*, int action );
0BB4: FFFFFFFF 2D2CF444 ; 2ED: TEXTID PNUM2Name( void* pnum, int isIconNeeded, int only_full_number_flag );
0BB8: FFFFFFFF F9B90445 ; 2EE: int SpeedDial_GetPNUM( int _zero, char charter0__9, void* PNUM );
0BBC: FFFFFFFF 71BE0445 ; 2EF: void* MetaData_Desc_Create( wchar_t* path, wchar_t* name );
0BC0: FFFFFFFF 91BF0445 ; 2F0: void MetaData_Desc_Destroy( void* MetaData_Desc );
0BC4: FFFFFFFF D5BE0445 ; 2F1: wchar_t* MetaData_Desc_GetTags( void* MetaData_Desc, int tagID );
0BC8: FFFFFFFF 65BF0445 ; 2F2: int MetaData_Desc_GetTrackNum( void* MetaData_Desc, int __NULL );
0BCC: FFFFFFFF 2DBDE844 ; 2F3: int DispObject_GetWindowWidth( DISP_OBJ* );
0BD0: FFFFFFFF 3DBDE844 ; 2F4: int DispObject_GetWindowHeight( DISP_OBJ* );
0BD4: FFFFFFFF B140D344 ; 2F5: int get_system_langID( void );
0BD8: FFFFFFFF FD38ED44 ; 2F6: char* lang_get_name( int langID );
0BDC: FFFFFFFF 1D311145 ; 2F7: int w_chdir( const wchar_t* path );
0BE0: FFFFFFFF 65D48044 ; 2F8: int w_fopen( const wchar_t* name, int attr, int rights, int err );
0BE4: FFFFFFFF 0DD58044 ; 2F9: int w_fstat( const wchar_t* name, W_FSTAT* );
0BE8: FFFFFFFF B9D48044 ; 2FA: int w_fwrite( int f, void* buf, int size );
0BEC: FFFFFFFF 9DD48044 ; 2FB: int w_fread( int f, void* buf, int size );
0BF0: FFFFFFFF 15BECF44 ; 2FC: int w_lseek( int f, int offs, int mode );
0BF4: FFFFFFFF F1D48044 ; 2FD: int w_fclose( int f );
0BF8: FFFFFFFF 95491145 ; 2FE: int w_mkdir( const wchar_t* path, int mode );
0BFC: FFFFFFFF 79400E45 ; 2FF: int DirHandle_SetFilterStr( DIR_HANDLE*, const wchar_t* filter );
0C00: FFFFFFFF EDF0E844 ; 300: int Disp_GetTextIDWidth( TEXTID, int len );
0C04: FFFFFFFF 2356E544 ; 301: int MetaData_Desc_GetCoverInfo( void* MetaData_Desc, char* cover_type, int* size, int* cover_offset );
0C08: FFFFFFFF D931F544 ; 302: int ImageID_GetIndirect( void* buf_image, int size, int __NULL, wchar_t* image_type, IMAGEID* );
0C0C: FFFFFFFF 1D81E444 ; 303: void unixtime2datetime( int, DATETIME* );
0C10: FFFFFFFF 4973E544 ; 304: int List_Insert( LIST* lst, int i, void* item );
0C14: FFFFFFFF 39640E45 ; 305: int FileCopy( wchar_t* src_path, wchar_t* src_name, wchar_t* dest_path, wchar_t* dest_name, int );
0C18: FFFFFFFF A9650E45 ; 306: int FileMove( wchar_t* src_path, wchar_t* src_name, wchar_t* dest_path, wchar_t* dest_name, int );
0C1C: FFFFFFFF D1F7AB44 ; 307: void RedLED_On( int __NULL );
0C20: FFFFFFFF 25F8AB44 ; 308: void RedLED_Off( int __NULL );
0C24: FFFFFFFF F1D2E844 ; 309: void DispObject_SetLayerColor( DISP_OBJ*, int color );
0C28: FFFFFFFF FDEDC244 ; 30A: int JavaAppDesc_GetJavaAppID( void* JavaDesc );
0C2C: FFFFFFFF D1001045 ; 30B: void REQUEST_UI_OAF_START_APPLICATION( const int* sync, int appID, char* flag );
0C30: FFFFFFFF 1D6FF744 ; 30C: int JavaApp_LogoImageID_Get( wchar_t* fullpath, IMAGEID* );
0C34: FFFFFFFF 29D0D344 ; 30D: GUI* CreateProgressBar( BOOK* book, int display );
0C38: FFFFFFFF 2DD3D344 ; 30E: void ProgressBar_SetText( GUI*, TEXTID text );
0C3C: FFFFFFFF BDD3D344 ; 30F: void ProgressBar_SetIcon( GUI*, IMAGEID );
0C40: FFFFFFFF 09D3D344 ; 310: void ProgressBar_SetPercentValue( GUI*, int value );
0C44: FFFFFFFF CDD3D344 ; 311: void ProgressBar_SetBarDisabled( GUI*, BOOL );
0C48: FFFFFFFF B10CEC44 ; 312: void StringInput_DispObject_SetText( DISP_OBJ*, TEXTID );
0C4C: FFFFFFFF DD55D644 ; 313: void GUIObject_SetTitleBackgroundImage( GUI*, IMAGEID );
0C50: FFFFFFFF F196D344 ; 314: void GUIObject_SetTitleIcon( GUI*, IMAGEID );
0C54: FFFFFFFF BD55D644 ; 315: void GUIObject_SetCursorImage( GUI*, IMAGEID );
0C58: FFFFFFFF CD55D644 ; 316: void GUIObject_SetBackgroundImage( GUI*, IMAGEID );
0C5C: FFFFFFFF 6D78D344 ; 317: void* DispObject_SoftKeys_GetParams( DISP_OBJ* );
0C60: FFFFFFFF B578D344 ; 318: LIST* DispObject_SoftKeys_GetList( DISP_OBJ*, BOOK* book, char __zero );
0C64: FFFFFFFF B132E844 ; 319: int BookObj_GetDisplayOrientation( BOOK* book );
0C68: FFFFFFFF 8D32E844 ; 31A: void BookObj_SetDisplayOrientation( BOOK* book, int orientation );
0C6C: FFFFFFFF 8123E844 ; 31B: BOOK* Display_GetTopBook( int display );
0C70: FFFFFFFF 25F50545 ; 31C: void Display_SetBrightness( int display, int brightness );
0C74: FFFFFFFF 69F50545 ; 31D: int Display_GetBrightness( int display );
0C78: FFFFFFFF 6151E244 ; 31E: void DataBrowserDesc_Menu_AddFSFunctions( void* DataBrowserDesc, int );
0C7C: FFFFFFFF B552E244 ; 31F: void DataBrowserDesc_Menu_AddNewFolder( void* DataBrowserDesc, int );
0C80: FFFFFFFF D952E244 ; 320: void DataBrowserDesc_Menu_AddMarkFiles( void* DataBrowserDesc, int );
0C84: FFFFFFFF 91FBEA44 ; 321: void SetTheme( wchar_t* path, wchar_t* name, int bookid, int unk_1 );
0C88: FFFFFFFF B512EA44 ; 322: void SoftKeys_GetLabel( DISP_OBJ* softkeys, SKLABEL* lbl, int id );
0C8C: FFFFFFFF F90DEA44 ; 323: void SoftKeys_Update( DISP_OBJ* softkeys );
0C90: FFFFFFFF A1520745 ; 324: int get_CellData( PLMN_LAC_DESC* desc1, RAT_CI_DESC* desc2, char* CSReg );
0C94: FFFFFFFF B12EDE44 ; 325: void* IncommingCall_Reject( BOOK* book );
0C98: FFFFFFFF F941DE44 ; 326: void* IncommingCall_Mute( BOOK* book );
0C9C: FFFFFFFF 39928F44 ; 327: int GetRadioState( char* level, char* flag );
0CA0: FFFFFFFF C5200D45 ; 328: int Bluetooth_GetState( void );
0CA4: FFFFFFFF A1200D45 ; 329: int Bluetooth_GetPhoneVisibility( void );
0CA8: FFFFFFFF 49210D45 ; 32A: int Bluetooth_isBusy( void );
;0CAC: xxxxxxxx yyyyyyyy ; 32B: int USB_isConnected( void );
0CB0: FFFFFFFF 554B1145 ; 32C: void* w_diropen( const wchar_t* dir );
0CB4: FFFFFFFF ADC2CF44 ; 32D: wchar_t* w_dirread( void* );
0CB8: FFFFFFFF DD4D1145 ; 32E: int w_dirclose( void* );
0CBC: FFFFFFFF 49C3CF44 ; 32F: int w_rename( const wchar_t* dst, const wchar_t* src );
0CC0: FFFFFFFF F9C2CF44 ; 330: int w_remove( const wchar_t* dir );
0CC4: FFFFFFFF 45F3CF44 ; 331: int ConnectionManager_Connection_GetState( void );
0CC8: FFFFFFFF 49928F44 ; 332: int GetSignalQuality( char* rssi, char* ber );
0CCC: FFFFFFFF 2DDDF844 ; 333: int IsCameraBook( BOOK* bk );
0CD0: FFFFFFFF BDE2C744 ; 334: int IsSoundRecorderBook( BOOK* bk );
;0CD4: xxxxxxxx yyyyyyyy ; 335: void StringInput_MenuItem_SetPriority( GUI* strinp, int prio, int actionID );
0CD8: FFFFFFFF D12AF744 ; 336: void VideoPlayerControl( BOOK* VideoPlayerBook, int );
0CDC: FFFFFFFF DD23F744 ; 337: void Video_ActionBack( BOOK* VideoPlayerBook, void* );
0CE0: FFFFFFFF A93BF744 ; 338: void Video_ExtractFrame( BOOK* VideoPlayerBook, void* );
;0CE4: xxxxxxxx yyyyyyyy ; 339: void Video_ZoomOn( BOOK* VideoPlayerBook, void* );
;0CE8: xxxxxxxx yyyyyyyy ; 33A: void RightNow_SetActive( int flag );
;0CEC: xxxxxxxx yyyyyyyy ; 33B: void VideoResize_AutomateMode( BOOK* VideoPlayerBook, u16 VideoWidth, u16 VideoHeight, u16* NewWidth, u16* NewHeight );
;0CF0: xxxxxxxx yyyyyyyy ; 33C: void VideoResize_AllScreenMode( BOOK* VideoPlayerBook, u16 VideoWidth, u16 VideoHeight, u16* NewWidth, u16* NewHeight );
;0CF4: xxxxxxxx yyyyyyyy ; 33D: int Video_GetCurrentSkinID( BOOK* VideoPlayerBook );
;0CF8: xxxxxxxx yyyyyyyy ; 33E: void Video_SetSkin( GUI* VideoPlayerGUI, int skinID );
0CFC: FFFFFFFF B126F744 ; 33F: int Video_SetPermit( BOOK* VideoPlayerBook, u16 NewWidth, u16 NewHeight );
0D00: FFFFFFFF 7122F744 ; 340: int Video_Refresh( BOOK* VideoPlayerBook, GUI* VideoPlayerGUI );
0D04: FFFFFFFF 8D24F744 ; 341: void Video_Play( BOOK* VideoPlayerBook, void* );
0D08: FFFFFFFF E525F744 ; 342: void Video_Pause( BOOK* VideoPlayerBook, void* );
0D0C: FFFFFFFF A525F744 ; 343: void Video_Stop( BOOK* VideoPlayerBook, void* );
0D10: FFFFFFFF F1E1F544 ; 344: void Audio_Pause( BOOK* );
0D14: FFFFFFFF 95DFF544 ; 345: void Audio_Play( BOOK* );
0D18: FFFFFFFF 91CCD344 ; 346: GUI* CreatePercentInputVA( int zero, ... );
0D1C: FFFFFFFF 21CED344 ; 347: int PercentInput_GetPercent( GUI* PercentInput );
0D20: FFFFFFFF 654AD644 ; 348: void GUIonMessage_SetLineSeparator( GUI_MESSAGE* msg, int _unk1 );
0D24: FFFFFFFF B5A20645 ; 349: int PHF_GetState( void );
0D28: FFFFFFFF CDA20645 ; 34A: int CHF_GetState( void );
;0D2C: xxxxxxxx yyyyyyyy ; 34B: void GUIObject_SoftKeys_RemoveBackground( GUI* );
;0D30: xxxxxxxx yyyyyyyy ; 34C: void GUIObject_SoftKeys_RestoreBackground( GUI* );
0D34: FFFFFFFF 5599EA44 ; 34D: void SetTrayIcon( IMAGEID, char mode );
0D38: FFFFFFFF 25C71545 ; 34E: int REQUEST_SETTING_RINGVOLUME_SET( const int* sync, int unk, int null, int vol );
0D3C: FFFFFFFF 05CA1545 ; 34F: int REQUEST_SETTING_VIBRATOR_SET( const int* sync, int unk, int mode );
0D40: FFFFFFFF 09C91545 ; 350: int REQUEST_SETTING_RINGTYPESOUNDFILE_SET( const int* sync, int null, wchar_t* path, wchar_t* name );
0D44: FFFFFFFF CDCE1545 ; 351: int REQUEST_SETTING_ANSWERINGMODE_SET( const int* sync, int unk, int mode );
0D48: FFFFFFFF E9C71545 ; 352: int REQUEST_SETTING_INCREASINGRING_SET( const int* sync, int unk, int unk2, int mode );
0D4C: FFFFFFFF 8DCC1545 ; 353: int REQUEST_SETTING_ALLOWEDCALLERS_SET( const int* sync, int unk, int mode );
0D50: FFFFFFFF B947C244 ; 354: int JavaAppDesc_GetJavaAppFullpath( void* JavaDesc, JavaAppFullpath* );
0D54: FFFFFFFF E969F744 ; 355: void* SoundRecorderDesc_Create( void );
0D58: FFFFFFFF 216AF744 ; 356: void SoundRecorderDesc_Destroy( void* desc );
0D5C: FFFFFFFF 396AF744 ; 357: int SoundRecorderDesc_SetBookID( void* desc, int BookID );
0D60: FFFFFFFF 456AF744 ; 358: int SoundRecorderDesc_SetType( void* desc, const int type );
0D64: FFFFFFFF 596AF744 ; 359: int SoundRecorderDesc_SetFolder( void* desc, const wchar_t* fpath );
0D68: FFFFFFFF 796AF744 ; 35A: int SoundRecorderDesc_SetFname( void* desc, const wchar_t* fname );
0D6C: FFFFFFFF 956AF744 ; 35B: int SoundRecorderDesc_SetRecordSize( void* desc, const int size );
0D70: FFFFFFFF C16AF744 ; 35C: int SoundRecorder_Create( void* desc );
;0D74: xxxxxxxx yyyyyyyy ; 35D: int SoundRecorder_RecordCall( BOOK* OngoingCallBook );
0D78: FFFFFFFF D11BA5ED ; 35E: int Browser_OpenURI( BOOK* book, char* URI, int mode );
0D7C: FFFFFFFF 55820245 ; 35F: char* GetURIScheme( int schemeID );
0D80: FFFFFFFF DD860245 ; 360: char* CreateURI( wchar_t* fpath, wchar_t* fname, char* URIScheme );
0D84: FFFFFFFF B553E244 ; 361: void DataBrowserDesc_SetViewModeAndSortOrder( void* DataBrowserDesc, int view_sort_ID );
;0D88: xxxxxxxx yyyyyyyy ; 362: int Alarm_GetCurrentTypeAndAlarmID( char* type, wchar_t* AlarmID );
;0D8C: xxxxxxxx yyyyyyyy ; 363: int Alarm_GetState( char* state, int AlarmID );
;0D90: xxxxxxxx yyyyyyyy ; 364: int Alarm_GetTIME( TIME* AlarmTime, int AlarmID );
;0D94: xxxxxxxx yyyyyyyy ; 365: int Alarm_GetWeekSettings( void* week, int AlarmID );
0D98: FFFFFFFF 45920645 ; 366: int IrDa_GetState( char* state );
0D9C: FFFFFFFF 2DCC1545 ; 367: void REQUEST_SETTING_ALLOWEDCALLERS_GET( const int* sync, int ProfileNum, char* state );
0DA0: FFFFFFFF 812EDE44 ; 368: void* IncommingCall_Accept( BOOK* book );
0DA4: FFFFFFFF 25CEC744 ; 369: void MediaPlayer_SoftKeys_SetText( GUI* player_gui, int actionID, TEXTID );
0DA8: FFFFFFFF F1CDC744 ; 36A: void MediaPlayer_SoftKeys_SetAction( GUI* player_gui, int actionID, SKACTIONPROC proc );
;0DAC: xxxxxxxx yyyyyyyy ; 36B: void MediaPlayer_SoftKeys_SetItemAsSubItem( GUI* player_gui, int item, int subitem );
0DB0: FFFFFFFF 41CEC744 ; 36C: void MediaPlayer_SoftKeys_AddHelpStr( GUI* player_gui, int item, TEXTID );
0DB4: FFFFFFFF 5DE6E244 ; 36D: void MediaPlayer_ShowNowPlaying( DISP_OBJ*, int );
0DB8: FFFFFFFF 51A0E844 ; 36E: void DispObject_Show( DISP_OBJ*, int mode );
0DBC: FFFFFFFF A96B9744 ; 36F: int Request_EventChannel_Subscribe( const int* sync, int mode, int event );
;0DC0: xxxxxxxx yyyyyyyy ; 370: void GUIObject_SoftKeys_ExecuteAction( GUI*, u16 actionID );
0DC4: FFFFFFFF 61DF9744 ; 371: int Request_ICA_ShutdownAllConnections( const int* sync );
0DC8: FFFFFFFF 59D41545 ; 372: int REQUEST_PROFILE_GETPROFILENAME( const int* sync, int unk, TEXTID_DATA*, char* error );
0DCC: FFFFFFFF 3155E244 ; 373: int DataBrowserDesc_SetFocusToFILEITEM( void* DataBrowserDesc, FILEITEM* );
0DD0: FFFFFFFF 7949D644 ; 374: int GUIonMessage_GetMsg( GUI_MESSAGE* msg );
0DD4: FFFFFFFF 8149D644 ; 375: BOOK* GUIonMessage_GetBook( GUI_MESSAGE* msg );
0DD8: FFFFFFFF 7D49D644 ; 376: GUI* GUIonMessage_GetGui( GUI_MESSAGE* msg );
0DDC: FFFFFFFF 8549D644 ; 377: int GUIonMessage_GetSelectedItem( GUI_MESSAGE* msg );
0DE0: FFFFFFFF 9549D644 ; 378: int GUIonMessage_GetPrevSelectedItem( GUI_MESSAGE* msg );
;0DE4: xxxxxxxx yyyyyyyy ; 379: void ObexSendFile( SEND_OBEX_STRUCT* );
0DE8: FFFFFFFF 7963E944 ; 37A: void Feedback_SetManualScrollingText( DISP_OBJ* feedback_disp_obj, int state );
;0DEC: xxxxxxxx yyyyyyyy ; 37B: int EqualizerGain_Set( int AudioSessionID, int Band, int Level );
0DF0: FFFFFFFF D1617344 ; 37C: int CANVAS_Get_GviGC( PCANVAS pcanvas, GVI_GC* dest );
0DF4: FFFFFFFF 257E8244 ; 37D: void GVI_BitBlt( GVI_GC destgc, int destx, int desty, int destxsize, int destysize, GVI_GC srcgc, int srcx, int srcy, int _204, int _0, int _0_2, int _0_3 );
0DF8: FFFFFFFF 957F8244 ; 37E: void GVI_StretchBlt( GVI_GC destgc, int destx, int desty, int destxsize, int destysize, GVI_GC srcgc, int srcx, int srcy, int srcxsize, int srcysize, int _204, int _0, int _0_2, int _0_3 );
0DFC: FFFFFFFF 41808244 ; 37F: void GVI_TransformBlt( GVI_GC destgc, int destx, int desty, GVI_GC srcgc, int srcx, int srcy, int srcxsize, int srcysize, int orientation, int _0 );
0E00: FFFFFFFF 85748244 ; 380: GVI_PEN GVI_CreatePen( char thikness, int color );
0E04: FFFFFFFF D18BB044 ; 381: GVI_PEN GVI_CreateDashedPen( char thikness, int color, int bitmask, int step, int offset );
0E08: FFFFFFFF 11748244 ; 382: GVI_BRUSH GVI_CreateSolidBrush( int color );
0E0C: FFFFFFFF 6D6E8244 ; 383: BOOL GVI_Delete_GVI_Object( GVI_OBJ* );
0E10: FFFFFFFF 55798244 ; 384: void GVI_DrawEllipse( GVI_GC gc, int x, int y, int w, int h, GVI_PEN pen );
0E14: FFFFFFFF DD848244 ; 385: void GVI_DrawLine( GVI_GC gc, int x1, int y1, int x2, int y2, GVI_PEN pen );
0E18: FFFFFFFF 75898244 ; 386: void GVI_DrawLines( GVI_GC gc, POINT* points, int count, GVI_PEN pen );
0E1C: FFFFFFFF FD898244 ; 387: void GVI_DrawPolyLine( GVI_GC gc, POINT* points, int count, GVI_PEN pen, int is_closed );
0E20: FFFFFFFF E58B8244 ; 388: void GVI_DrawRectangle( GVI_GC gc, int x, int y, int w, int h, GVI_PEN pen );
0E24: FFFFFFFF 197D8244 ; 389: void GVI_DrawRoundRect( GVI_GC gc, int x, int y, int w, int h, int arcw, int arch, GVI_PEN pen );
0E28: FFFFFFFF E1858244 ; 38A: void GVI_DrawSolidLines( GVI_GC gc, POINT* points, int count, int color, int width );
0E2C: FFFFFFFF BD878244 ; 38B: void GVI_DrawSolidPolyLine( GVI_GC gc, POINT* points, int count, int is_closed, int color, int width );
0E30: FFFFFFFF 7D888244 ; 38C: void GVI_DrawSolidRectangle( GVI_GC gc, int x, int y, int w, int h, int color, int width );
0E34: FFFFFFFF D17B8244 ; 38D: void GVI_FillEllipse( GVI_GC gc, int x, int y, int w, int h, GVI_BRUSH brush );
0E38: FFFFFFFF D9838244 ; 38E: void GVI_FillPolygon( GVI_GC gc, POINT* pp, int count, GVI_BRUSH brush );
0E3C: FFFFFFFF F58A8244 ; 38F: void GVI_FillRectangle( GVI_GC gc, int x, int y, int w, int h, GVI_BRUSH brush );
0E40: FFFFFFFF 558B8244 ; 390: void GVI_FillRectangles( GVI_GC gc, GVI_XYWH* rcs, int count, GVI_BRUSH brush );
0E44: FFFFFFFF 697C8244 ; 391: void GVI_FillSolidEllipse( GVI_GC gc, int x, int y, int w, int h, int color );
0E48: FFFFFFFF A18B8244 ; 392: void GVI_FillSolidRectangle( GVI_GC gc, int x, int y, int w, int h, int color );
0E4C: FFFFFFFF 017E8244 ; 393: int GVI_FillSolidRoundRect( GVI_GC gc, int x, int y, int w, int h, int arcx, int arcy, int color );
0E50: FFFFFFFF 51838244 ; 394: void GVI_FillSolidTriangle( GVI_GC gc, int x1, int y1, int x2, int y2, int x3, int y3, int color );
0E54: FFFFFFFF 4527D444 ; 395: GC* GC_CreateMemoryGC( int xsize, int ysize, int bpp, int unk, void* somefn, int unk2 );
0E58: FFFFFFFF 0128D444 ; 396: void GC_FreeGC( GC* gc );
;0E5C: xxxxxxxx yyyyyyyy ; 397: void REQUEST_ALARMCLOCKSTATUS_GET( const int* sync, char* alarm_status );
;0E60: xxxxxxxx yyyyyyyy ; 398: void REQUEST_ALARMCLOCKTIME_GET( const int* sync, TIME* t );
;0E64: xxxxxxxx yyyyyyyy ; 399: void REQUEST_ALARMDATEANDTIMESTATUS_GET( const int* sync, DATETIME* );
0E68: FFFFFFFF 9D08F444 ; 39A: int Settings_ShowNumber_Get( char* state );
0E6C: FFFFFFFF 59758244 ; 39B: GVI_BMP GVI_CreateBitmap( int xsize, int ysize, int bpp );
0E70: FFFFFFFF B58C8244 ; 39C: GVI_GC GVI_CreateMemoryGC( GVI_BMP bitmap );
0E74: FFFFFFFF 59918644 ; 39D: void GVI_DeleteMemoryGC( GVI_GC gc );
0E78: FFFFFFFF 054DEC44 ; 39E: int StringInput_DispObject_SetLanguage( DISP_OBJ_STRING_INPUT*, int langID, int flag );
0E7C: FFFFFFFF 9574E544 ; 39F: int List_InsertSorted( LIST* list, void* item, int (*cmp_proc)( void*, void* ) );
0E80: FFFFFFFF 4D45D644 ; 3A0: int ListMenu_SetItemIcon( GUI_LIST*, int Item, wchar_t unk_FFFF, int mode, IMAGEID );
0E84: FFFFFFFF AD08BF44 ; 3A1: void wstrnupr( wchar_t* wstr, int maxlen );
0E88: FFFFFFFF 993BCD44 ; 3A2: void wstrnlwr( wchar_t* wstr, int maxlen );
0E8C: FFFFFFFF 5D44D644 ; 3A3: int ListMenu_SetItemTextScroll( GUI_LIST*, int scroll );
0E90: FFFFFFFF ED55D644 ; 3A4: void GUIObject_SetTitleTextColor( GUI*, int color );
0E94: FFFFFFFF 0156D644 ; 3A5: void GUIObject_SetListTextColor( GUI*, int unk1, int list_color, int unk2, int unk3, int list_select_color, int unk4, int _zerro );
0E98: FFFFFFFF C93BEE44 ; 3A6: void DispObject_SetTitleTextColor( DISP_OBJ*, int color );
0E9C: FFFFFFFF F53AEE44 ; 3A7: void DispObject_SetListTextColor( DISP_OBJ*, int unk1, int list_color, int unk2, int unk3, int list_select_color, int unk4, int _zerro );
0EA0: FFFFFFFF 793AEE44 ; 3A8: void DispObject_SetCursorImage( DISP_OBJ*, IMAGEID );
0EA4: FFFFFFFF 953AEE44 ; 3A9: void DispObject_SetBackgroundImage( DISP_OBJ*, IMAGEID );
0EA8: FFFFFFFF C53AEE44 ; 3AA: void DispObject_SetTitleBackgroundImage( DISP_OBJ*, IMAGEID );
0EAC: FFFFFFFF 8DB8D344 ; 3AB: void TabMenuBar_SetTabTitle( GUI_TABMENUBAR*, int tab_num, TEXTID );
0EB0: FFFFFFFF A967EA44 ; 3AC: BOOK* GUIObject_GetBook( GUI* );
0EB4: FFFFFFFF 9965D344 ; 3AD: u16 SoftKeys_GetSelectedAction( void );
0EB8: FFFFFFFF 21BED344 ; 3AE: void MonitorFeedback_SetTimer( GUI_FEEDBACK*, int time, void (*callback)(BOOK*) );
0EBC: FFFFFFFF B141D644 ;83AF: void (*getListMenuOnGuiDestroy())( GUI* ); //nullsub(void)
0EC0: FFFFFFFF 25F7ED44 ;83B0: void (*getListMenuOnDescCreate())( DISP_DESC* );
0EC4: FFFFFFFF B541D644 ;83B1: void (*getListMenuOnDispMessage())( DISP_OBJ*, void*, GUI* );
0EC8: FFFFFFFF 75B5D344 ;83B2: void (*getTabMenuBarOnGuiDestroy())( GUI* ); //nullsub(void)
0ECC: FFFFFFFF 8537EA44 ;83B3: void (*getTabMenuBarOnDescCreate())( DISP_DESC* );
0ED0: FFFFFFFF 5DB5D344 ;83B4: void (*getTabMenuBarOnDispMessage())( DISP_OBJ*, void*, GUI* );
0ED4: FFFFFFFF 1D59D644 ;83B5: void (*getOneOfManyOnGuiDestroy())( GUI* ); //nullsub(void)
0ED8: FFFFFFFF 495CEE44 ;83B6: void (*getOneOfManyOnDescCreate())( DISP_DESC* );
0EDC: FFFFFFFF 2159D644 ;83B7: void (*getOneOfManyOnDispMessage())( DISP_OBJ*, void*, GUI* );
0EE0: FFFFFFFF 9556D644 ;83B8: void (*getNOfManyOnGuiDestroy())( GUI* ); //nullsub(void)
0EE4: FFFFFFFF 054FEE44 ;83B9: void (*getNOfManyOnDescCreate())( DISP_DESC* );
0EE8: FFFFFFFF 9956D644 ;83BA: void (*getNOfManyOnDispMessage())( DISP_OBJ*, void*, GUI* );
0EEC: FFFFFFFF 8D48D644 ; 3BB: void ListMenu_DestroyItems( GUI_LIST* );
0EF0: FFFFFFFF D1C7E844 ; 3BC: void DispObject_SetScrollBarBackgroundColor( DISP_OBJ*, int color );
0EF4: FFFFFFFF C9C7E844 ; 3BD: void DispObject_SetScrollBarColor( DISP_OBJ*, int color );
;0EF8: xxxxxxxx yyyyyyyy ; 3BE: void DispObject_SetSoftkeysColor( DISP_OBJ*, int color );
0EFC: FFFFFFFF E1D3D344 ; 3BF: void YesNoQuestion_SetIcon( GUI*, IMAGEID );
0F00: FFFFFFFF 2D97D344 ; 3C0: void GUIObject_SetBacklightTimeout( GUI*, int time );
0F04: FFFFFFFF 5D44D644 ; 3C1: void ListMenu_SetHotkeyMode( GUI_LIST*, LISTMENU_HOTKEY_MODE );
0F08: FFFFFFFF 1948D644 ; 3C2: void ListMenu_SetSearchLanguageMode( GUI_LIST*, int mode );
0F0C: FFFFFFFF 2948D644 ; 3C3: void ListMenu_EnableSearchHeader( GUI_LIST*, BOOL );
0F10: FFFFFFFF 914BD644 ; 3C4: wchar_t* GUIonMessage_GetSearchString( GUI_MESSAGE* msg );
0F14: FFFFFFFF B14BD644 ; 3C5: int GUIonMessage_GetSearchStringLength( GUI_MESSAGE* msg );
;0F18: xxxxxxxx yyyyyyyy ; 3C6: int EqualizerGain_Get( int AudioSessionID, int Band, int* Level );
;0F1C: xxxxxxxx yyyyyyyy ; 3C7: int Theme_DestroyMenuIcons( void );
0F20: FFFFFFFF A107D744 ; 3C8: void CoCreateInstance( PUUID cid, PUUID iid, void** pInterface );
0F24: FFFFFFFF E196D344 ; 3C9: void GUIObject_SetSecondRowTitleText( GUI*, TEXTID );
0F28: FFFFFFFF 1543D644 ; 3CA: int ListMenu_GetItemCount( GUI_LIST* );
0F2C: FFFFFFFF 1518CA44 ; 3CB: void OSE_GetShell( void** pInterface );
0F30: FFFFFFFF F541B444 ; 3CC: int swscanf( const wchar_t* buffer, const wchar_t* format, ... );
0F34: FFFFFFFF 35F90244 ; 3CD: int sscanf( const char* buffer, const char* format, ... );
0F38: FFFFFFFF 692DE844 ; 3CE: void BookObj_WindowSetWantsFocus( BOOK* book, int display, BOOL WantsFocus );
0F3C: FFFFFFFF 3132E844 ; 3CF: void BookObj_StayOnTop( BOOK* book, int mode );
0F40: FFFFFFFF FDBCE844 ; 3D0: void DispObject_WindowSetPosition( DISP_OBJ*, int x, int y );
0F44: FFFFFFFF CDBCE844 ; 3D1: void DispObject_WindowSetSize( DISP_OBJ*, int w, int h );
0F48: FFFFFFFF ED6AE944 ; 3D2: TEXTID Feedback_DispObject_GetText( DISP_OBJ* );
0F4C: FFFFFFFF 8D6AD344 ; 3D3: void DispObject_SoftKeys_ExecuteAction( DISP_OBJ*, u16 actionID );
0F50: FFFFFFFF C144E244 ; 3D4: LIST* DataBrowserBook_GetCurrentFoldersList( BOOK* DataBrowserBook );
;0F54: xxxxxxxx yyyyyyyy ; 3D5: void DispObject_SetAnimation( DISP_OBJ*, int style );
0F58: FFFFFFFF 2598D344 ; 3D6: void GUIObject_SetZOrder( GUI*, char, GUI* );
0F5C: FFFFFFFF 9596D544 ; 3D7: int StringInput_GetCursorPosition( GUI*, u16* pos, char* _zero );
0F60: FFFFFFFF A53EF344 ; 3D8: void str2PNUM( void* pnum, char* str, int len, int max_len );
0F64: FFFFFFFF D1BDDF44 ; 3D9: void pb_ui_search_bk_create_search_menu( int BookID, int mode );





;locale=Russian_Russia.1251
