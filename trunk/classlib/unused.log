BOOK
  Audio_Pause( BOOK* );
  Audio_Play( BOOK* );
  BookObj_CallSubroutine( BOOK* book, BOOK_SUBROUTINE* subr );
  BrowserItem_Get_SUB_EXECUTE( BOOK* BrowserItemBook );
  Browser_OpenURI( BOOK* book, char* URI, int mode );
  CreateListMenu( BOOK*, int display );
  CreateNOfMany( BOOK* book );
  CreateOneOfMany( BOOK* book );
  CreateProgressBar( BOOK* book, int display );
  CreateTabMenuBar( BOOK* book );
  DataBrowserBook_GetCurrentFoldersList( BOOK* DataBrowserBook );
  IncommingCall_Accept( BOOK* book );
  IncommingCall_Mute( BOOK* book );
  IncommingCall_Reject( BOOK* book );
  IsAudioPlayerBook( BOOK* bk);
  IsCameraBook( BOOK* bk );
  IsDataBrowserBook( BOOK* book );
  IsFmRadioBook( BOOK* bk );
  IsMediaPlayerVideoBook( BOOK* bk );
  IsRightNowBook( BOOK* book );
  IsScreenSaverBook( BOOK* bk );
  IsSoundRecorderBook( BOOK* bk );
  IsVolumeControllerBook( BOOK* book );
  MenuBook_Desktop_GetSelectedItemID( BOOK* MenuBook_Desktop );
  PlayerControl( BOOK* AudioPlayerBook, int );
  SBY_GetMainInput( BOOK* StandBy ); // !!!!! не настоящий !!!!!!
  SBY_GetStatusIndication( BOOK* StandBy ); // !!!!! не настоящий !!!!!!
  SoundRecorder_RecordCall( BOOK* OngoingCallBook );
  SwitchRadioStationFromList( BOOK* FmRadioBook, int );
  TextFeedbackWindow( BOOK* book, int zero );
  VideoPlayerControl( BOOK* VideoPlayerBook, int );
  VideoResize_AllScreenMode( BOOK* VideoPlayerBook, u16 VideoWidth, u16 VideoHeight, u16* NewWidth, u16* NewHeight );
  VideoResize_AutomateMode( BOOK* VideoPlayerBook, u16 VideoWidth, u16 VideoHeight, u16* NewWidth, u16* NewHeight );
  Video_ActionBack( BOOK* VideoPlayerBook, void* );
  Video_ExtractFrame( BOOK* VideoPlayerBook, void* );
  Video_GetCurrentSkinID( BOOK* VideoPlayerBook );
  Video_Pause( BOOK* VideoPlayerBook, void* );
  Video_Play( BOOK* VideoPlayerBook, void* );
  Video_Refresh( BOOK* VideoPlayerBook, GUI* VideoPlayerGUI );
  Video_SetPermit( BOOK* VideoPlayerBook, u16 NewWidth, u16 NewHeight );
  Video_Stop( BOOK* VideoPlayerBook, void* );
  Video_ZoomOn( BOOK* VideoPlayerBook, void* );

DISP_OBJ
  DISP_DESC_GetSize( DISP_OBJ* );
  DispObject_GetMethod04( DISP_OBJ* );
  DispObject_GetMethod05( DISP_OBJ* );
  DispObject_GetMethod06( DISP_OBJ* );
  DispObject_GetMethod07( DISP_OBJ* );
  DispObject_GetMethod0A( DISP_OBJ* );
  DispObject_GetMethod0B( DISP_OBJ* );
  DispObject_GetMethod0C( DISP_OBJ* );
  DispObject_GetOnClose( DISP_OBJ* );
  DispObject_GetOnConfig( DISP_OBJ* );
  DispObject_GetOnCreate( DISP_OBJ* );
  DispObject_GetOnKey( DISP_OBJ* );
  DispObject_GetOnLayout( DISP_OBJ* );
  DispObject_GetOnRedraw( DISP_OBJ* );
  DispObject_GetonRefresh( DISP_OBJ* );
  DispObject_SetListTextColor( DISP_OBJ*, int unk1, int list_color, int unk2, int unk3, int list_select_color, int unk4, int _zerro );
  DispObject_SetScrollBarBackgroundColor( DISP_OBJ*, int color );
  DispObject_SetScrollBarColor( DISP_OBJ*, int color );
  DispObject_SetSoftkeysColor( DISP_OBJ*, int color );
  DispObject_SetTitleTextColor( DISP_OBJ*, int color );
  DispObject_SoftKeys_GetList( DISP_OBJ*, BOOK* book, char __zero );
  DispObject_SoftKeys_GetParams( DISP_OBJ* );
  DispObject_SoftKeys_RestoreDefaultAction( DISP_OBJ*, int action );
  Feedback_DispObject_GetText( DISP_OBJ* );
  Feedback_SetManualScrollingText( DISP_OBJ* feedback_disp_obj, int state );
  MediaPlayer_ShowNowPlaying( DISP_OBJ*, int );
  SoftKeys_GetLabel( DISP_OBJ* softkeys, SKLABEL* lbl, int id );
  SoftKeys_Update( DISP_OBJ* softkeys );
  StringInput_DispObject_SetText( DISP_OBJ*, TEXTID );

GUI
  DateInput_GetDateInt( GUI* );
  Feedback_SetKeyHook( GUI_FEEDBACK*, void (*hook)( BOOK* book, int key, int unk, int unk2 ) );
  Feedback_SetOnClose( GUI_FEEDBACK*, void (*OnClose)( BOOK* book ) );
  Feedback_SetText( GUI_FEEDBACK*, TEXTID );
  Feedback_SetTextExtended( GUI_FEEDBACK*, TEXTID text, int where );
  Feedback_SetTimeout( GUI_FEEDBACK*, int time_ms );
  GUIInput_SetIcon( GUI*, IMAGEID );
  GUIObject_SetListTextColor( GUI*, int unk1, int list_color, int unk2, int unk3, int list_select_color, int unk4, int _zerro );
  GUIObject_SetSecondRowTitleText( GUI*, TEXTID );
  GUIObject_SetTitleTextColor( GUI*, int color );
  ListMenu_EnableSearchHeader( GUI_LIST*, BOOL );
  ListMenu_SetHotkeyMode( GUI_LIST*, LISTMENU_HOTKEY_MODE );
  ListMenu_SetItemIcon( GUI_LIST*, int Item, wchar_t unk_FFFF, int mode, IMAGEID );
  ListMenu_SetItemSecondLineText( GUI_LIST*, int elem_num, TEXTID );
  ListMenu_SetItemTextScroll( GUI_LIST*, int scroll );
  ListMenu_SetSearchLanguageMode( GUI_LIST*, int mode );
  MainInput_Hide( GUI* );
  MainInput_getCurPos( GUI* );
  MainInput_getPNUM( GUI* );
  MainInput_getVisible( GUI* );
  MainInput_isPlus( GUI* );
  MainInput_strlen( GUI* );
  MediaPlayer_SoftKeys_AddHelpStr( GUI* player_gui, int item, TEXTID );
  MediaPlayer_SoftKeys_SetAction( GUI* player_gui, int actionID, SKACTIONPROC proc );
  MediaPlayer_SoftKeys_SetItemAsSubItem( GUI* player_gui, int item, int subitem );
  MediaPlayer_SoftKeys_SetText( GUI* player_gui, int actionID, TEXTID );
  MonitorFeedback_SetTimer( GUI_FEEDBACK*, int time, void (*callback)(BOOK*) );
  PercentInput_GetPercent( GUI* PercentInput );
  ProgressBar_SetBarDisabled( GUI*, BOOL );
  ProgressBar_SetIcon( GUI*, IMAGEID );
  ProgressBar_SetPercentValue( GUI*, int value );
  ProgressBar_SetText( GUI*, TEXTID text );
  StatusIndication_SetItemText( GUI*, int item, TEXTID );
  StringInput_GetStringAndLen( GUI*, wchar_t**, u16* );
  StringInput_MenuItem_SetPriority( GUI* strinp, int prio, int actionID );
  StringInput_SetCursorPosition( GUI*, u16 curs_pos, char unk );
  TabMenuBar_SetOnTabSwitch( GUI_TABMENUBAR*, void (*proc)( BOOK*, int act_tab ) );
  TimeInput_GetTimeInt( GUI* );
  Video_SetSkin( GUI* VideoPlayerGUI, int skinID );
  YesNoQuestion_SetIcon( GUI*, IMAGEID );

