;Z770 SW-R1FA035
;Function Library
;v.2022_04_05
;(c) Hussein, IronMaster
;(p) farid
;pAtChFiLe=/boot/phone_app.cxc
+12228C00
0448: 00000000 A0071C2A ; 112: void* memset( void* mem, char chr, int size );
044C: 00000000 A8F50B10 ; 113: int memcpy( void* dest,const void* source, int cnt );
0450: 00000000 752C5510 ; 114: int sprintf( char* buf, const char* fmt, ... );
0454: 00000000 29315510 ; 115: int snwprintf( wchar_t* buffer, int size, const wchar_t* fmt, ... );
0458: 00000000 49FDFF10 ; 116: int _fopen( const wchar_t* filpath, const wchar_t*filname, unsigned int mode, unsigned int rights, unsigned int __0 );
045C: 00000000 F1FB5B11 ; 117: int fclose( int file );
0460: 00000000 8D140011 ; 118: int fread( int file, void* ptr, int size );
0464: 00000000 59160011 ; 119: int fwrite( int file, const void* ptr, int size );
;0468: xxxxxxxx yyyyyyyy ; 11A:
;046C: xxxxxxxx yyyyyyyy ; 11B:
0470: 00000000 41060011 ; 11C: int fstat( const wchar_t* path, const wchar_t* fname , FSTAT* fstat_stuct );
0474: 00000000 41DDFF10 ; 11D: DIR_HANDLE* AllocDirHandle( const wchar_t* path);
0478: 00000000 11DFFF10 ; 11E: FILELISTITEM *GetFname( DIR_HANDLE*, FILELISTITEM *);
047C: 00000000 556C0411 ; 11F: void* DataBrowserDesc_Create( void );
0480: 00000000 D56E0411 ; 120: void DataBrowserDesc_SetItemStyle( void* DataBrowserDesc , int style );
0484: 00000000 056F0411 ; 121: void DataBrowserDesc_SetHeaderText( void* DataBrowserDesc, TEXTID );
0488: 00000000 ED6E0411 ; 122: void DataBrowserDesc_SetFolders( void* DataBrowserDesc, const wchar_t** FolderList );
048C: 00000000 0D6F0411 ; 123: void DataBrowserDesc_SetOKSoftKeyText( void* DataBrowserDesc , TEXTID );
0490: 00000000 19320411 ; 124: void DataBrowser_Create( void* DataBrowserDesc );
0494: 00000000 056D0411 ; 125: void DataBrowserDesc_Destroy( void* DataBrowserDesc );
0498: 00000000 89300011 ; 126: wchar_t* getFileExtention( wchar_t* fname );
049C: 00000000 75E1FF10 ; 127: int DataBrowser_isFileInListExt( const wchar_t* ext_table,const wchar_t* path ,const wchar_t*fname );
04A0: 00000000 D11BA5ED ; 128: void Timer_ReSet( u16* timer, int time, TIMERPROC onTimer, LPARAM lparam );
04A4: 00000000 D11BA5ED ; 129: u16 Timer_Set( int time, TIMERPROC onTimer, LPARAM lparam );
04A8: 00000000 D11BA5ED ; 12A: void Timer_Kill( u16* timerID );
04AC: 00000000 255F6111 ; 12B: int CreateBook( BOOK* pbook, void (*onClose)( BOOK* ), const PAGE_DESC* bp, const char* name, int ParentBookID, APP_DESC* );
04B0: 00000000 41606111 ; 12C: void BookObj_KillBook( BOOK* book );
04B4: 00000000 9D5C6111 ; 12D: void BookObj_GotoPage( BOOK* book, const PAGE_DESC* page );
04B8: 00000000 055E6111 ; 12E: void BookObj_ReturnPage( BOOK* book, int );
04BC: 00000000 31656111 ; 12F: void FreeBook( BOOK* book );
04C0: 00000000 05406111 ; 130: BOOK* FindBook( IS_NEEDED_BOOK );
04C4: 00000000 CD1E6211 ; 131: BOOK* Find_StandbyBook( void );
04C8: 00000000 C5616111 ; 132: void BookObj_SetFocus( BOOK* book, int display );
04CC: 00000000 0DA76B11 ; 133: void GUIObject_SetTitleText( GUI*, TEXTID );
04D0: 00000000 E1A16B11 ; 134: void GUIObject_Show( GUI* );
04D4: 00000000 CDB56611 ; 135: void ListMenu_SetCursorToItem( GUI_LIST*, int item );
04D8: 00000000 39A26B11 ; 136: void GUIObject_SetStyle( GUI*, int style );
04DC: 00000000 F1C06611 ; 137: int GUIonMessage_GetCreatedItemIndex( GUI_MESSAGE* msg );
04E0: 00000000 FDC06611 ; 138: char GUIonMessage_SetMenuItemText( GUI_MESSAGE* msg, TEXTID );
04E4: 00000000 2DC16611 ; 139: char GUIonMessage_SetMenuItemSecondLineText( GUI_MESSAGE* msg, TEXTID );
04E8: 00000000 0DC16611 ; 13A: char GUIonMessage_SetMenuItemInfoText( GUI_MESSAGE* msg, TEXTID );
04EC: 00000000 1DC16611 ; 13B: char GUIonMessage_SetMenuItemUnavailableText( GUI_MESSAGE* msg, TEXTID );
04F0: 00000000 3DC16611 ; 13C: void GUIonMessage_SetMenuItemIcon( GUI_MESSAGE* msg, int align, IMAGEID );
04F4: 00000000 41E46A11 ; 13D: void DispObject_SetTitleText( DISP_OBJ*, TEXTID );
04F8: 00000000 E1B56611 ; 13E: int ListMenu_GetSelectedItem( GUI_LIST* );
04FC: 00000000 31B66611 ; 13F: void ListMenu_SetItemStyle( GUI_LIST*, int style );
0500: 00000000 D11BA5ED ; 140: void GC_PutChar( GC* gc, int x, int y, int _zero, int zero1, wchar_t wchar );
0504: 00000000 B50C6F11 ; 141: int IsScreenSaverBook( BOOK* bk );
0508: 00000000 2D836C11 ; 142: void StatusIndication_SetItemText( GUI*, int item, TEXTID );
050C: 00000000 DD316211 ; 143: void StatusIndication_ShowNotes( TEXTID );
0510: 00000000 D5936411 ; 144: GUI* CreateStringInputVA( int, ... );
0514: 00000000 29D76611 ; 145: GUI_ONEOFMANY* CreateOneOfMany( BOOK* book );
0518: 00000000 D5D86611 ; 146: void OneOfMany_SetItemCount( GUI_ONEOFMANY*, int count );
051C: 00000000 F1D86611 ; 147: void OneOfMany_SetChecked( GUI_ONEOFMANY*, int checked );
0520: 00000000 25D96611 ; 148: void OneOfMany_SetTexts( GUI_ONEOFMANY*, TEXTID* strids, int Count );
0524: 00000000 01D96611 ; 149: int OneOfMany_GetSelected( GUI_ONEOFMANY* );
0528: 00000000 79306211 ; 14A: void StatusIndication_Item8_SetText( TEXTID );
052C: 00000000 6D3A6D11 ; 14B: void GUIObject_SoftKeys_SetAction( GUI*, u16 actionID, SKACTIONPROC proc );
0530: 00000000 E53A6D11 ; 14C: void GUIObject_SoftKeys_SetText( GUI*, u16 actionID , TEXTID );
0534: 00000000 D53B6D11 ; 14D: void GUIObject_SoftKeys_SetEnable( GUI*, u16 actionID, BOOL );
0538: 00000000 8D3B6D11 ; 14E: void GUIObject_SoftKeys_AddErrorStr( GUI*, u16 actionID, TEXTID );
053C: 00000000 213A6D11 ; 14F: void GUIObject_SoftKeys_RemoveItem( GUI*, u16 actionID);
0540: 00000000 693B6D11 ; 150: void GUIObject_SoftKeys_SetVisible( GUI*, u16 actionID, BOOL );
0544: 00000000 ED3D6D11 ; 151: void GUIObject_SoftKeys_SuppressDefaultAction( GUI*, u16 actionID );
0548: 00000000 0912FF10 ; 152: wchar_t* wstrcpy( wchar_t* dest, const wchar_t* source );
054C: 00000000 2112FF10 ; 153: wchar_t* wstrncpy( wchar_t* dest, const wchar_t* source, int maxlen );
0550: 00000000 4D12FF10 ; 154: wchar_t* wstrcat( wchar_t* wstr, const wchar_t* subwstr );
0554: 00000000 91385510 ; 155: wchar_t* wstrncat( wchar_t* wstr, const wchar_t* subwstr , int maxlen );
0558: 00000000 D911FF10 ; 156: int wstrcmp( const wchar_t* wstr1, const wchar_t*wstr2 );
055C: 00000000 C511FF10 ; 157: int wstrlen( const wchar_t* wstr);
0560: 00000000 8D24FF10 ; 158: wchar_t* str2wstr( wchar_t* wstr, const char* str );
0564: 00000000 FD2E5510 ; 159: int strcmp( const char * str1, const char* str2 );
0568: 00000000 592F5510 ; 15A: int strlen( const char * str );
056C: 00000000 E512FF10 ; 15B: char* wstr2strn( char* str, const wchar_t* wstr, int maxlen );
0570: 00000000 D11BA5ED ; 15C: TEXTID TextID_CreateIntegerID( int num );
0574: 00000000 D11BA5ED ; 15D: TEXTID TextID_Create( const void* wstr , TEXT_ENCODING flag, int len );
0578: 00000000 D11BA5ED ; 15E: void TextID_GetString( TEXTID, char* str, int maxlen );
057C: 00000000 D11BA5ED ; 15F: int TextID_GetWString( TEXTID, wchar_t* dest, int maxlen );
0580: 00000000 D11BA5ED ; 160: int TextID_GetLength( TEXTID );
0584: 00000000 D11BA5ED ; 161: void TextID_Destroy( TEXTID );
0588: 00000000 016CF810 ; 162: int AB_DEFAULTNBR_GET( int rec_num, void* mem_0x30, int* unk );
058C: 00000000 D11BA5ED ; 163: int AB_READSTRING( AB_STR_ITEM*, int rec_num, int field_ID );
0590: 00000000 6DC2F810 ; 164: int AB_READPHONENBR( AB_NUM_ITEM*, int rec_num, int field_ID );
0594: 00000000 25C3F810 ; 165: int AB_GETNBROFITEMS( int get_from, int sub_id );
0598: 00000000 A16A6911 ; 166: int PNUM_len( BCD_TEXT pnum );
059C: 00000000 ED234C11 ; 167: void PNUM2str( char* str, BCD_TEXT pnum, int len, int max_len );
05A0: 00000000 55A06B11 ; 168: DISP_OBJ* GUIObject_GetDispObject( GUI* );
05A4: 00000000 A9F54311 ; 169: LIST* List_Create( void );
05A8: 00000000 D1F54311 ; 16A: void List_Destroy( LIST* lst );
05AC: 00000000 1DF74311 ; 16B: int List_InsertFirst( LIST* lst, void* item );
05B0: 00000000 D564FE10 ; 16C: int Gif2ID( u16 IMAGEHANDLE, const wchar_t* path, const wchar_t* fname, wchar_t* ID );
05B4: 00000000 0567FE10 ; 16D: int REQUEST_IMAGEHANDLER_INTERNAL_GETHANDLE( const int* sync, u16* IMAGEHANDLE, char* unk );
05B8: 00000000 4958ED10 ; 16E: void REQUEST_DATEANDTIME_GET( const int* sync, DATETIME* dt );
05BC: 00000000 CDDE6E11 ; 16F: void IndicationDevice_Backlight_FadeToLevel( int unk_zero, int bl_level );
05C0: 00000000 88F60910 ; 170: int GetFreeBytesOnHeap( void );
05C4: 00000000 ED616111 ; 171: void BookObj_Hide( BOOK* book, int display );
05C8: 00000000 FD616111 ; 172: void BookObj_Show( BOOK* book, int display );
05CC: 00000000 21216211 ; 173: void StartAPP( const wchar_t* appname );
05D0: 00000000 05B76611 ; 174: void ListMenu_SetOnMessage( GUI_LIST*, int (*proc)( GUI_MESSAGE* ) );
05D4: 00000000 05D40011 ; 175: char* manifest_GetParam( const char* buf, const char* param_name, int unk );
05D8: 00000000 01180011 ; 176: int lseek( int file, int offset, int mode );
;05DC: xxxxxxxx yyyyyyyy ;8177: int get_VBUFFER( void );
;05E0: xxxxxxxx yyyyyyyy ; 178: void SetLampLevel( int level ); //nullsub( void )
05E4: 00000000 A9F64311 ; 179: void* List_RemoveAt( LIST* lst, int index );
05E8: 00000000 41A40A10 ; 17A: PROCESS GetCurrentPID( void );
05EC: 00000000 DDF64311 ; 17B: int List_IndexOf( LIST* lst, void* item );
05F0: 00000000 F8470F10 ; 17C: union SIGNAL* alloc( OSBUFSIZE size, SIGSELECT signo );
05F4: 00000000 14480F10 ; 17D: union SIGNAL* receive( const SIGSELECT* sigsel );
05F8: 00000000 04480F10 ; 17E: void send( union SIGNAL** sig, PROCESS to );
05FC: 00000000 54480F10 ; 17F: PROCESS sender( union SIGNAL** sig );
0600: 00000000 24480F10 ; 180: void free_buf( union SIGNAL** sig );
0604: 00000000 F0480F10 ; 181: PROCESS create_process( PROCESS_TYPE, char* name, OSENTRYPOINT* entrypoint, OSADDRESS stack_size, OSPRIORITY priority, OSTIME timeslice, PROCESS pid_block, void* redir_table, OSVECTOR vector, OSUSER user );
0608: 00000000 104B0F10 ; 182: void start( PROCESS pid );
060C: 00000000 C0490F10 ; 183: int get_ptype( PROCESS pid );
0610: 00000000 0C490F10 ; 184: PROCESS current_process( void );
0614: 00000000 44480F10 ; 185: void delay( OSTIME timeout );
0618: 00000000 0C4A0F10 ; 186: OSBOOLEAN hunt( const char* name, OSUSER user, PROCESS* name_, union SIGNAL** hunt_sig );
061C: 00000000 384A0F10 ; 187: void kill_proc( PROCESS pid );
;0620: xxxxxxxx yyyyyyyy ; 188:
0624: 00000000 70480F10 ; 189: union SIGNAL* receive_w_tmo( OSTIME timeout, SIGSELECT*sel );
;0628: xxxxxxxx yyyyyyyy ; 18A:
062C: 00000000 204B0F10 ; 18B: void stop( PROCESS pid );
0630: 00000000 8C490F10 ; 18C: OSBOOLEAN get_mem( PROCESS pid, OSADDRESS from, void* to, OSADDRESS size );
0634: 00000000 21A20A10 ; 18D: OSADDRESS get_envp( PROCESS pid, char* name );
0638: 00000000 35A20A10 ; 18E: OSBOOLEAN set_envp( PROCESS pid, char* name, OSADDRESS value );
063C: 00000000 44490F10 ; 18F: PROCESS get_bid( PROCESS pid );
0640: 00000000 195F1F11 ; 190: int datetime2unixtime( DATETIME* dt );
;0644: xxxxxxxx yyyyyyyy ; 191:
;0648: xxxxxxxx yyyyyyyy ; 192:
;064C: xxxxxxxx yyyyyyyy ; 193:
;0650: xxxxxxxx yyyyyyyy ; 194:
;0654: xxxxxxxx yyyyyyyy ; 195:
;0658: xxxxxxxx yyyyyyyy ; 196:
;065C: xxxxxxxx yyyyyyyy ; 197:
;0660: xxxxxxxx yyyyyyyy ; 198:
;0664: xxxxxxxx yyyyyyyy ; 199:
;0668: xxxxxxxx yyyyyyyy ; 19A:
;066C: xxxxxxxx yyyyyyyy ; 19B:
;0670: xxxxxxxx yyyyyyyy ; 19C:
;0674: xxxxxxxx yyyyyyyy ; 19D:
;0678: xxxxxxxx yyyyyyyy ; 19E:
;067C: xxxxxxxx yyyyyyyy ; 19F:
0680: 00000000 252F5510 ; 1A0: char* strcpy( char* dest, const char* source );
;0684: xxxxxxxx yyyyyyyy ; 1A1:
;0688: xxxxxxxx yyyyyyyy ; 1A2:
;068C: xxxxxxxx yyyyyyyy ; 1A3:
;0690: xxxxxxxx yyyyyyyy ; 1A4:
;0694: xxxxxxxx yyyyyyyy ; 1A5:
0698: 00000000 FD2F6111 ; 1A6: char* UIEventName( int event );
069C: 00000000 546A282A ;81A7: char* MissedEvents( void );
06A0: 00000000 6D4D6111 ; 1A8: void UI_Event( int event );
06A4: 00000000 7D4D6111 ; 1A9: void UI_Event_wData( int event, void* message, void(*free_proc)( void* ) );
06A8: 00000000 C54D6111 ; 1AA: void UI_Event_toBookID( int event, int BookID );
06AC: 00000000 D94D6111 ; 1AB: void UI_Event_toBookIDwData( int event,int BookID,void*message,void(*free_proc)( void* ) );
06B0: 00000000 79F84311 ; 1AC: int List_Find( LIST* lst, void* itemtofind, LISTFINDCALLBACK cmp_proc );
06B4: 00000000 C9F74311 ; 1AD: void* List_Get( LIST* lst, int index );
06B8: 00000000 4925FF10 ; 1AE: wchar_t* wstrrchr( const wchar_t* wstr, wchar_t wchar );
06BC: 00000000 115D6111 ; 1AF: void BookObj_CallSubroutine( BOOK* book, BOOK_SUBROUTINE* subr );
06C0: 00000000 25F74311 ; 1B0: int List_InsertLast( LIST* lst, void* item );
06C4: 00000000 41E9202A ; 1B1: void debug_printf( const char* fmt, ... );
06C8: 00000000 C5092011 ; 1B2: int PlayFile( const wchar_t* path, const wchar_t* fname );
;06CC: xxxxxxxx yyyyyyyy ; 1B3:
06D0: 00000000 49357B11 ; 1B4: int REQUEST_PROFILE_GETACTIVEPROFILE( const int* sync, int* level );
06D4: 00000000 955A7B11 ; 1B5: int Profile_SetActive( int NUMprof, int set_in_gdfs_flag );
;06D8: xxxxxxxx yyyyyyyy ; 1B6:
06DC: 00000000 090D6F11 ; 1B7: int isKeylocked( void );
06E0: 00000000 559E5F11 ; 1B8: int IsMediaPlayerVideoBook( BOOK* bk );
;06E4: xxxxxxxx yyyyyyyy ; 1B9:
;06E8: xxxxxxxx yyyyyyyy ; 1BA:
;06EC: xxxxxxxx yyyyyyyy ; 1BB:
06F0: 00000000 295AED10 ; 1BC: int REQUEST_DATEFORMAT_GET( const int* sync, char* DateFormat );
06F4: 00000000 495BED10 ; 1BD: int REQUEST_TIMEFORMAT_GET( const int* sync, char* TimeFormat );
06F8: 00000000 95FA6111 ; 1BE: int Date2ID( DATE*, int TimeFormat, int );
06FC: 00000000 35F96111 ; 1BF: int Time2ID( TIME*, char TimeFormat, int isSec );
0700: 00000000 C5B36611 ; 1C0: GUI_LIST* CreateListMenu( BOOK*, int display );
0704: 00000000 F5B56611 ; 1C1: void ListMenu_SetItemCount( GUI_LIST*, int item_count );
0708: 00000000 DC2F282A ;81C2: LIST** ROOT_APP( void ); //Application session list
070C: 00000000 D13A6D11 ; 1C3: void GUIObject_SoftKeys_SetInfoText( GUI*, u16 actionID, TEXTID );
0710: 00000000 093C6D11 ; 1C4: void GUIObject_SoftKeys_SetItemAsSubItem( GUI*, u16 actionID, int subitem );
0714: 00000000 81396211 ; 1C5: int REQUEST_SYSTEM_SHUTDOWN( void );
0718: 00000000 91396211 ; 1C6: int REQUEST_SYSTEM_RESTART( void );
071C: 00000000 3D3B6D11 ; 1C7: void GUIObject_SoftKeys_SetTexts( GUI*, u16 actionID, TEXTID short_text, TEXTID full_text );
0720: 00000000 51326E11 ; 1C8: int IsRightNowBook( BOOK* book );
0724: 00000000 BD2D6F11 ; 1C9: int IsVolumeControllerBook( BOOK* book );
0728: 00000000 B5716C11 ; 1CA: GUI_TABMENUBAR* CreateTabMenuBar( BOOK* book );
072C: 00000000 CD736C11 ; 1CB: void TabMenuBar_SetTabCount( GUI_TABMENUBAR*, int count );
0730: 00000000 85726C11 ; 1CC: void TabMenuBar_SetTabGui( GUI_TABMENUBAR*, int tab, GUI* );
0734: 00000000 05736C11 ; 1CD: void TabMenuBar_SetTabIcon( GUI_TABMENUBAR*, int tab, IMAGEID , int for_state );
0738: 00000000 E59F6B11 ; 1CE: GUI* GUIObject_Destroy( GUI* );
073C: 00000000 C5A26B11 ; 1CF: void GUIInput_SetIcon( GUI*, IMAGEID );
0740: 00000000 599C6411 ; 1D0: int StringInput_GetStringAndLen( GUI*, wchar_t**, u16* );
0744: 00000000 A494272A ;81D1: PAudioControl* GetAudioControlPtr( void );
0748: 00000000 71CCD410 ; 1D2: int AudioControl_Vibrate(PAudioControl pIAudioControl, int vibratime, int pausetime, int totaltime);
074C: 00000000 1D2E0011 ; 1D3: int GetVolumeSize( wchar_t* root_folder, VOLUMESIZE* );
0750: 00000000 89D16611 ; 1D4: GUI_NOFMANY* CreateNOfMany( BOOK* book );
0754: 00000000 ADD36611 ; 1D5: void NOfMany_SetTexts( GUI_NOFMANY*, TEXTID* strids, int items_count );
0758: 00000000 31D36611 ; 1D6: void NOfMany_SetChecked( GUI_NOFMANY*, u16 * checked_table, int items_count );
075C: 00000000 F9D26611 ; 1D7: void NOfMany_SetCursor( GUI_NOFMANY*, int item );
0760: 00000000 55D36611 ; 1D8: int NOfMany_GetCheckedCount( GUI_NOFMANY* );
0764: 00000000 45D36611 ; 1D9: int NOfMany_GetChecked( GUI_NOFMANY*, u16* buffer );
0768: 00000000 A5D36611 ; 1DA: void NOfMany_SetOnMessage( GUI_NOFMANY*, int(*proc)( GUI_MESSAGE* ) );
;076C: xxxxxxxx yyyyyyyy ; 1DB:
;0770: xxxxxxxx yyyyyyyy ; 1DC:
;0774: xxxxxxxx yyyyyyyy ; 1DD:
;0778: xxxxxxxx yyyyyyyy ; 1DE:
077C: 00000000 110B2011 ; 1DF: PAudioControl AudioControl_Init( void );
0780: 00000000 B9D86611 ; 1E0: void OneOfMany_SetFocused( GUI_ONEOFMANY*, int item );
0784: 00000000 1DD96611 ; 1E1: void OneOfMany_SetOnMessage( GUI_ONEOFMANY*, int(*proc)( GUI_MESSAGE * ) );
0788: 00000000 FDD16111 ; 1E2: GUI_FEEDBACK* CreateMonitorFeedback( TEXTID , BOOK*, void(*onbusy)(BOOK*), void(*onedit)(BOOK*), void(*ondelete)(BOOK*) );
078C: 00000000 B1D26111 ; 1E3: void Feedback_SetText( GUI_FEEDBACK*, TEXTID );
0790: 00000000 8DC45D10 ; 1E4: int GetBatteryState( void* unused, BATT* );
0794: 00000000 21776B11 ; 1E5: GC* get_DisplayGC( void );
0798: 00000000 01FA6A11 ; 1E6: void DispObject_GetRect( DISP_OBJ*, RECT* );
079C: 00000000 697D6B11 ; 1E7: void GC_GetRect( GC* gc, RECT* );
07A0: 00000000 6D806B11 ; 1E8: int GC_GetXX( GC* gc );
07A4: 00000000 61806B11 ; 1E9: void GC_SetXX( GC* gc, int );
07A8: 00000000 197D6B11 ; 1EA: void GC_ValidateRect( GC* gc, RECT* );
07AC: 00000000 79626111 ; 1EB: void BookObj_AddGUIObject( BOOK* book, GUI* );
07B0: 00000000 CD266B11 ; 1EC: void DrawRect( int x1, int y1, int x2, int y2, int pen_color, int brush_color );
07B4: 00000000 CD296B11 ; 1ED: void DrawString( TEXTID, int align, int x1, int y1, int x2, int y2, int unk, int unk1, int pen_color , int brush_color );
07B8: 00000000 C5666111 ; 1EE: void XGUIList_AddGUIObject( XGUILIST* xguilist, GUI* );
07BC: 00000000 C1F76A11 ; 1EF: void DispObject_InvalidateRect( DISP_OBJ*, RECT* );
07C0: 00000000 F59E6B11 ; 1F0: int GUIObject_Create( GUI*, void(*GuiDestroy)( GUI* ), void(*DispDescCreate)( DISP_DESC* ), BOOK*, void(*DispObjCallBack)( DISP_OBJ*, void* msg, GUI* ), int display, int size_of_gui );
07C4: 00000000 85356B11 ; 1F1: int SetFont( int );
07C8: 00000000 E455282A ;81F2: DISP_OBJ** StatusRow_p( void );
07CC: 00000000 05416111 ; 1F3: int root_list_get_session_count( void );
07D0: 00000000 11416111 ; 1F4: UI_APP_SESSION* root_list_get_session( int num_session );
07D4: 00000000 F1396111 ; 1F5: BOOK *SESSION_GetTopBook( UI_APP_SESSION* );
07D8: 00000000 D11BA5ED ; 1F6: int MainInput_getVisible( GUI* );
07DC: 00000000 1D056E11 ; 1F7: int MainInput_strlen( GUI* );
07E0: 00000000 4D056E11 ; 1F8: BCD_TEXT MainInput_getPNUM( GUI* );
07E4: 00000000 D11BA5ED ; 1F9: int MainInput_isPlus( GUI* );
07E8: 00000000 DD656111 ; 1FA: int BookObj_GetBookID( BOOK* book );
07EC: 00000000 BD385510 ; 1FB: int wstrncmp( const wchar_t*, const wchar_t*, int );
07F0: 00000000 510A6B11 ; 1FC: int DispObject_GetAbsoluteXPos( DISP_OBJ* );
07F4: 00000000 850A6B11 ; 1FD: int DispObject_GetAbsoluteYPos( DISP_OBJ* );
;07F8: xxxxxxxx yyyyyyyy ; 1FE:
07FC: 00000000 657B6D11 ; 1FF: int GetThemeColor( int, int );
0800: 00000000 7D2F7B11 ; 200: int REQUEST_SETTING_SILENCE_SET( const int* sync, u16 profile, u16 value);
0804: 00000000 252F7B11 ; 201: int REQUEST_SETTING_SILENCE_GET( const int* sync, u16 profile, char* silence_mode );
0808: 00000000 59E4F710 ; 202: void VCALL_Init( void* vc );
080C: 00000000 51E5F710 ; 203: void VCALL_SetName( void* vc, wchar_t* name ,unsigned short name_len );
0810: 00000000 B1E5F710 ; 204: void VCALL_SetNameIcon( void* vc, IMAGEID );
0814: 00000000 71E5F710 ; 205: void VCALL_SetNumber( void* vc, wchar_t* number , unsigned short num_len );
0818: 00000000 95E5F710 ; 206: void VCALL_SetHZ1( void* vc, int, u16 );
081C: 00000000 A1E5F710 ; 207: void VCALL_SetHZ2( void* vc, u16 );
0820: 00000000 95E0F710 ; 208: void MakeVoiceCall( int SessioID, void* vc ,int flag );
;0824: xxxxxxxx yyyyyyyy ; 209:
0828: 00000000 69070011 ; 20A: void FileDelete( wchar_t* path, wchar_t* filename, int* error );
082C: 00000000 81A16B11 ; 20B: void GUIObject_SetFocus( GUI*, int );
0830: 00000000 8D9E2711 ; 20C: int MSG_SendMessage_CreateMessage(( int, void* );
0834: 00000000 A5A52711 ; 20D: int MSG_SendMessage_DestroyMessage( void* );
0838: 00000000 69A02711 ; 20E: int MSG_SendMessage_AddRecipient( void*, wchar_t*, wchar_t*, int, int );
083C: 00000000 DDA42711 ; 20F: int MSG_SendMessage_Start( int,void*, int );
0840: 00000000 84FAA711 ;8210: void* get_APP_DESC_TABLE( void );
;0844: xxxxxxxx yyyyyyyy ; 211:
0848: 00000000 0DC5F810 ; 212: int AB_POSITIONNBR_GET( void* ab_name, char*, u16*, void* ab_num );
084C: 00000000 21C4F810 ; 213: TEXTID AB_NAME_ITEM2TextID( AB_STR_ITEM* ab_name );
0850: 00000000 85C4F810 ; 214: TEXTID AB_NUM_ITEM2TextID( AB_NUM_ITEM* ab_num_item );
0854: 00000000 E1FC6311 ; 215: int GetABRecNum( AB_GET_STRUCT* ); //nullsub( void )
0858: 00000000 505FA311 ;8216: AB_ITEM_DESC* get_AB_ITEMS_DESC( );
085C: 00000000 01C50A10 ; 217: GUI* SBY_GetMainInput( BOOK* StandBy ); //not real; don't port from here
0860: 00000000 5D8BFD10 ; 218: GUI* SBY_GetStatusIndication(BOOK* StandBy ); //not real; don't port from here
0864: 00000000 89F7EF10 ; 219: int REQUEST_PHONEBOOK_ACCESSSTATUS_TOTAL_GET( const int* sync, int* );
0868: 00000000 CC89272A ;821A: PROCESS* PID_MMI( void );
;086C: xxxxxxxx yyyyyyyy ; 21B:
0870: 00000000 B5F06A11 ; 21C: GUI* DispObject_GetGUI( DISP_OBJ* );
0874: 00000000 01F06A11 ; 21D: DISP_OBJ* Display_GetFocusedDispObject( int display );
0878: 00000000 59F66A11 ; 21E: char DispObject_GetVisible( DISP_OBJ* );
087C: 00000000 6D940B10 ; 21F: DISP_DESC* DispObject_GetDESC( DISP_OBJ* ); //not real; don't port from here
0880: 00000000 5DA66A11 ; 220: void DISP_DESC_SetName( DISP_DESC*, const char* name );
0884: 00000000 C1076B11 ; 221: char* DispObject_GetName(DISP_OBJ* );
0888: 00000000 61A66A11 ; 222: void DISP_DESC_SetSize( DISP_DESC*, u16 size);
;088C: xxxxxxxx yyyyyyyy ; 223: u16 DISP_DESC_GetSize( DISP_OBJ* );
0890: 00000000 65A66A11 ; 224: void DISP_DESC_SetOnCreate(DISP_DESC*, DISP_OBJ_ONCREATE_METHOD );
0894: 00000000 E1A66A11 ; 225: DISP_OBJ_ONCREATE_METHOD DispObject_GetOnCreate( DISP_OBJ* );
0898: 00000000 69A66A11 ; 226: void DISP_DESC_SetOnClose( DISP_DESC*, DISP_OBJ_ONCLOSE_METHOD );
089C: 00000000 FDA66A11 ; 227: DISP_OBJ_ONCLOSE_METHOD DispObject_GetOnClose( DISP_OBJ* );
08A0: 00000000 6DA66A11 ; 228: void DISP_DESC_SetOnRedraw( DISP_DESC*, DISP_OBJ_ONREDRAW_METHOD );
08A4: 00000000 19A76A11 ; 229: DISP_OBJ_ONREDRAW_METHOD DispObject_GetOnRedraw( DISP_OBJ* );
08A8: 00000000 75A66A11 ; 22A: void DISP_DESC_SetOnKey( DISP_DESC*, DISP_OBJ_ONKEY_METHOD);
08AC: 00000000 51A76A11 ; 22B: DISP_OBJ_ONKEY_METHOD DispObject_GetOnKey( DISP_OBJ* );
08B0: 00000000 71A66A11 ; 22C: void DISP_DESC_SetOnRefresh( DISP_DESC*, DISP_OBJ_METHOD );
08B4: 00000000 35A76A11 ; 22D: DISP_OBJ_METHOD DispObject_GetonRefresh( DISP_OBJ* );
;08B8: xxxxxxxx yyyyyyyy ; 22E: void DISP_DESC_SetMethod04( DISP_DESC*,void(*)( void* ) );
;08BC: xxxxxxxx yyyyyyyy ; 22F: DISP_OBJ_METHOD DispObject_GetMethod04( DISP_OBJ* );
;08C0: xxxxxxxx yyyyyyyy ; 230: void DISP_DESC_SetMethod05(DISP_DESC*, void(*)( void* ) );
;08C4: xxxxxxxx yyyyyyyy ; 231: DISP_OBJ_METHOD DispObject_GetMethod05(DISP_OBJ* );
08C8: 00000000 79A66A11 ; 232: void DISP_DESC_SetMethod06(DISP_DESC*,DISP_OBJ_METHOD);
08CC: 00000000 6DA76A11 ; 233: DISP_OBJ_METHOD DispObject_GetMethod06(DISP_OBJ* );
;08D0: xxxxxxxx yyyyyyyy ; 234: void DISP_DESC_SetMethod07(DISP_DESC*,void(*)( void* ) );
;08D4: xxxxxxxx yyyyyyyy ; 235: DISP_OBJ_METHOD DispObject_GetMethod07(DISP_OBJ* );
08D8: 00000000 81A66A11 ; 236: void DISP_DESC_SetOnLayout(DISP_DESC*,DISP_OBJ_METHOD);
08DC: 00000000 A5A76A11 ; 237: DISP_OBJ_METHOD DispObject_GetOnLayout( DISP_OBJ* );
08E0: 00000000 85A66A11 ; 238: void DISP_DESC_SetOnConfig( DISP_DESC*,void(*)( void* ) );
08E4: 00000000 C1A76A11 ; 239: DISP_OBJ_METHOD DispObject_GetOnConfig( DISP_OBJ* );
08E8: 00000000 8DA66A11 ; 23A: void DISP_DESC_SetMethod0A( DISP_DESC*, void(*)( void* ) );
08EC: 00000000 DDA76A11 ; 23B: DISP_OBJ_METHOD DispObject_GetMethod0A(D ISP_OBJ* );
08F0: 00000000 91A66A11 ; 23C: void DISP_DESC_SetMethod0B( DISP_DESC*, void(*)( void* ) );
08F4: 00000000 F9A76A11 ; 23D: DISP_OBJ_METHOD DispObject_GetMethod0B(DISP_OBJ*);
08F8: 00000000 95A66A11 ; 23E: void DISP_DESC_SetMethod0C( DISP_DESC*, void(*)( void* ) );
;08FC: xxxxxxxx yyyyyyyy ; 23F: DISP_OBJ_METHOD DispObject_GetMethod0C( DISP_OBJ* );
0900: 00000000 D18B6C11 ; 240: void JavaSession_Manager( int cmd );
0904: 00000000 2D3A1811 ; 241: TEXTID JavaSession_GetName( void );
0908: 00000000 D11BA5ED ; 242: TEXTID TextID_Copy( TEXTID );
090C: 00000000 7D656111 ; 243: UI_APP_SESSION* BookObj_GetSession( BOOK* book );
0910: 00000000 91C16611 ; 244: void GUIonMessage_SetNumberOfSubItems( GUI_MESSAGE* msg, int unk, int num_sub_items );
0914: 00000000 09C26611 ; 245: void GUIonMessage_SubItem_SetText( GUI_MESSAGE* msg, TEXTID );
0918: 00000000 FDC16611 ; 246: int GUIonMessage_SubItem_GetCreatedParentIndex( GUI_MESSAGE* msg );
091C: 00000000 357B4A11 ; 247: void GoMusic( void );
0920: 00000000 D9C16611 ; 248: int GUIonMessage_SubItem_GetSelectedIndex( GUI_MESSAGE* msg );
0924: 00000000 79C26611 ; 249: void GUIonMessage_SubItem_SetDisabled( GUI_MESSAGE* msg, BOOL state );
0928: 00000000 C9092011 ; 24A: int PlayFileV( const wchar_t* path, const wchar_t* fname, int vol );
092C: 00000000 F5D41D11 ; 24B: int GetSilent( void );
0930: 00000000 01921D11 ; 24C: int GetVibrator( int ignorevibrator,int ignoresilent );
0934: 00000000 85E31D11 ; 24D: int GetAudioSettings( int what, char* retvalue );
0938: 00000000 D11BA5ED ; 24E: int GetChipID( void );
;093C: xxxxxxxx yyyyyyyy ; 24F:
;0940: xxxxxxxx yyyyyyyy ; 250:
;0944: xxxxxxxx yyyyyyyy ; 251:
0948: 00000000 F1C16611 ; 252: int GUIonMessage_SubItem_GetCreatedIndex( GUI_MESSAGE* msg );
094C: 00000000 E5C16611 ; 253: int GUIonMessage_SubItem_GetSelectedParentIndex( GUI_MESSAGE* msg );
0950: 00000000 8DE0FF10 ; 254: void DestroyDirHandle( DIR_HANDLE* handle );
0954: 00000000 70C1A411 ;8255: DB_EXT* LastExtDB( void );
0958: 00000000 F1D30311 ; 256: void GetOtherExtMethods( FILESUBROUTINE** );
095C: 00000000 81BC6111 ; 257: int MessageBox( TEXTID header_text, TEXTID message_text, IMAGEID, int style, int time, BOOK* book );
0960: 00000000 B9976C11 ; 258: int Display_GetHeight( int display );
0964: 00000000 C5976C11 ; 259: int Display_GetWidth( int display );
0968: 00000000 6D092011 ; 25A: void PlaySystemSound( int SndNumber );
;096C: xxxxxxxx yyyyyyyy ; 25B:
;0970: xxxxxxxx yyyyyyyy ; 25C:
0974: 00000000 79726C11 ; 25D: int TabMenuBar_GetFocusedTab( GUI_TABMENUBAR* );
0978: 00000000 69726C11 ; 25E: void TabMenuBar_SetFocusedTab( GUI_TABMENUBAR*, int tab_num );
097C: 00000000 757F6B11 ; 25F: int GC_GetPenColor( GC* gc );
0980: 00000000 397F6B11 ; 260: void GC_SetPenColor( GC* gc, int pen_color );
0984: 00000000 B97B6B11 ; 261: void GC_SetPixel( GC* gc, int x1, int y1, int color);
0988: 00000000 F9896B11 ; 262: void GC_DrawLine( GC* gc, int x1, int y1, int x2, int y2 );
098C: 00000000 818B6B11 ; 263: void GC_DrawFRect( GC* gc, int color, int x1, int y1, int x2, int y2 );
0990: 00000000 457C6B11 ; 264: int GC_WritePixels( GC* gc, int x1, int y1, int x2, int y2, int* bmp );
0994: 00000000 31E0B510 ; 265: png_structp png_create_read_struct_2( png_const_charp user_png_ver, png_voidp error_ptr,png_error_ptr error_fn, png_error_ptr warn_fn, png_voidp mem_ptr,png_malloc_ptr malloc_fn, png_free_ptr free_fn );
0998: 00000000 7DE1B510 ; 266: void png_destroy_read_struct( png_structpp png_ptr_ptr, png_infopp info_ptr_ptr, png_infopp end_info_ptr_ptr );
099C: 00000000 D9C7B510 ; 267: png_infop png_create_info_struct( png_structp png_ptr );
09A0: 00000000 0DC8B510 ; 268: void png_destroy_info_struct( png_structp png_ptr, png_infopp info_ptr_ptr );
09A4: 00000000 09E0B510 ; 269: void png_set_progressive_read_fn( png_structp png_ptr, png_voidp progressive_ptr, png_progressive_info_ptr info_fn, png_progressive_row_ptr row_fn, png_progressive_end_ptr end_fn );
09A8: 00000000 C9CFB510 ; 26A: void png_process_data( png_structp png_ptr, png_infop info_ptr, png_bytep buffer, png_size_t buffer_size );
09AC: 00000000 51E1B510 ; 26B: void png_read_update_info( png_structp png_ptr, png_infop info_ptr );
09B0: 00000000 2DE0B510 ; 26C: png_voidp png_get_progressive_ptr( png_structp png_ptr );
09B4: 00000000 95CCB510 ; 26D: png_uint_32 png_get_IHDR( png_structp png_ptr, png_infop info_ptr, png_uint_32* width, png_uint_32* height, int* bit_depth, int* color_type, int* interlace_method, int* compression_method, int*filter_method );
09B8: 00000000 1DE3B510 ; 26E: void png_set_strip_16( png_structp png_ptr );
09BC: 00000000 29E3B510 ; 26F: void png_set_gray_1_2_4_to_8( png_structp png_ptr );
09C0: 00000000 4DE3B510 ; 270: void png_set_gray_to_rgb( png_structp png_ptr );
09C4: 00000000 69CCB510 ; 271: png_uint_32 png_get_valid( png_structp png_ptr, png_infop info_ptr, png_uint_32 flag );
09C8: 00000000 41E3B510 ; 272: void png_set_tRNS_to_alpha( png_structp png_ptr );
09CC: 00000000 A910B610 ; 273: void png_set_filler( png_structp png_ptr, png_uint_32 filler, int flags );
09D0: 00000000 35E3B510 ; 274: void png_set_palette_to_rgb( png_structp png_ptr );
09D4: 00000000 81CCB510 ; 275: png_uint_32 png_get_rowbytes( png_structp png_ptr, png_infop info_ptr );
09D8: 00000000 E9DFB510 ; 276: void png_progressive_combine_row( png_structp png_ptr, png_bytep old_row, png_bytep new_row );
09DC: 00000000 D1C6B510 ; 277: int png_sig_cmp( png_bytep sig, png_size_t start, png_size_t num_to_check );
09E0: 00000000 44380C10 ; 278: int setjmp( jmp_buf jmpbuf );
09E4: 00000000 68380C10 ; 279: void longjmp( jmp_buf, int );
09E8: 00000000 691DB610 ; 27A: int inflateInit2_( z_streamp strm, int windowBits,const char* version, int stream_size );
09EC: 00000000 111FB610 ; 27B: int inflate( z_streamp strm, int flush );
09F0: 00000000 0932B610 ; 27C: int inflateEnd( z_streamp strm );
09F4: 00000000 20081C2A ; 27D: int memcmp( const void* m1, const void* m2, int n );
09F8: 00000000 952F5510 ; 27E: int strncmp( const char* s1, const char* s2, int len );
09FC: 00000000 C92F5510 ; 27F: char* strncpy( char* dest,const char* source,int maxlen );
0A00: 00000000 C52E5510 ; 280: char* strcat( char* dest, const char*src );
0A04: 00000000 F1A66B11 ; 281: void GUIObject_SetTitleType( GUI*, int type );
0A08: 00000000 9DC16611 ; 282: void GUIonMessage_SetItemDisabled( GUI_MESSAGE* msg, BOOL );
0A0C: 00000000 7D67FE10 ; 283: int REQUEST_IMAGEHANDLER_INTERNAL_REGISTER( const int* sync, u16 ImageHandle, wchar_t*path, wchar_t* fname, int unk, wchar_t* ImageID , char* error );
0A10: 00000000 0568FE10 ; 284: int REQUEST_IMAGEHANDLER_INTERNAL_UNREGISTER( const int* sync, u16 ImageHandle, u16*, u16*, IMAGEID, int unk_1, char* error );
0A14: 00000000 6C44442A ;8285: SURFACE** get_Surfaces( void );
0A18: 00000000 E101D210 ; 286: int iconidname2id( const wchar_t* idname, int maxnamelen, int* id );
0A1C: 00000000 15BCEC10 ; 287: int textidname2id( const wchar_t* idname, int maxnamelen, TEXTID* id );
0A20: 00000000 85B76611 ; 288: void ListMenu_SetNoItemText( GUI_LIST*, TEXTID str );
;0A24: xxxxxxxx yyyyyyyy ; 289:
0A28: 00000000 19313411 ; 28A: int IsFmRadioBook( BOOK* bk );
0A2C: 00000000 359E5C11 ; 28B: int IsAudioPlayerBook( BOOK* bk );
0A30: 00000000 F9995C11 ; 28C: void PlayerControl( BOOK* AudioPlayerBook, int );
0A34: 00000000 49123411 ; 28D: void SwitchRadioStationFromList( BOOK* FmRadioBook, int );
0A38: 00000000 55A56D11 ; 28E: void Shortcut_Run( wchar_t* shortcut_name );
0A3C: 00000000 21D5FF10 ; 28F: int mkdir( const wchar_t* path );
0A40: 00000000 EDD8FF10 ; 290: int rmdir( const wchar_t* path, int zero );
0A44: 00000000 A5060011 ; 291: int chmod( const wchar_t* path, const wchar_t* fname, int amode );
0A48: 00000000 850C0011 ; 292: int rename( const wchar_t* oldpath, const wchar_t* oldfname, const wchar_t* newpath, const wchar_t* newfname, int zero );
0A4C: 00000000 D11BA5ED ; 293: int GetImageWidth( IMAGEID );
0A50: 00000000 D11BA5ED ; 294: int GetImageHeight( IMAGEID );
0A54: 00000000 F988F410 ; 295: void* CallID_GetCallStatusDesc( int CallID );
0A58: 00000000 917FF410 ; 296: wchar_t* CallStatusDesc_GetName( void* CallStatusDesc );
0A5C: 00000000 BDF84311 ; 297: void List_DestroyElements( LIST* lst, int(*cmp_proc)( void* item ),void(*free_proc)( void* item ) );
0A60: 00000000 65305510 ; 298: char* strstr( const char* str1, const char* str2 );
0A64: 00000000 35917211 ; 299: int GPRS_GetLastSessionInfo( int, GPRS_SESSION_INFO* );
0A68: 00000000 E525FF10 ; 29A: int wstrcmpni( const wchar_t* wstr1, const wchar_t* wstr2, int len );
0A6C: 00000000 F9246111 ; 29B: int wtoi( const wchar_t* wstr, int len,int* dest );
0A70: 00000000 15621F11 ; 29C: void DATE_GetWeekDay( DATE*, char* dest);
0A74: 00000000 F5C9F010 ; 29D: void Cale_GetSettings( int setID, void* );
0A78: 00000000 1D3A5510 ; 29E: wchar_t* wstrwstr( const wchar_t* wstr1,const wchar_t* wstr2 );
0A7C: 00000000 2926FF10 ; 29F: int wstrcmpi( const wchar_t* ws1, const wchar_t* ws2 );
0A80: 00000000 05385510 ; 2A0: wchar_t* wstrchr( const wchar_t* source, wchar_t chr );
0A84: 00000000 393E6D11 ; 2A1: void GUIObject_SoftKeys_Hide( GUI* );
0A88: 00000000 453E6D11 ; 2A2: void GUIObject_SoftKeys_Show( GUI* );
0A8C: 00000000 09046D11 ; 2A3: DISP_OBJ* DispObject_SoftKeys_Get( void );
0A90: 00000000 31706A11 ; 2A4: int ThemeImage_SetImage( int theme_image_type, int _zero, int __zero, const wchar_t* path, const wchar_t* fname, int wallp_scaling );
0A94: 00000000 B5916C11 ; 2A5: GUI* CreateYesNoQuestionVA( int zero, ... );
0A98: 00000000 DDB96611 ; 2A6: void ListMenu_SetItemSecondLineText( GUI_LIST*, int elem_num, TEXTID );
0A9C: 00000000 A1F60211 ; 2A7: void _REQUEST_OAF_START_APPLICATION( const int* sync, int __zero, MIDP_DESC *, int ___zero );
0AA0: 00000000 0D2C0011 ; 2A8: wchar_t* FSX_GetInvalidChar( wchar_t* name);
0AA4: 00000000 F56E0411 ; 2A9: void DataBrowserDesc_SetFoldersNumber( void* DataBrowserDesc, int state );
0AA8: 00000000 C96E0411 ; 2AA: void DataBrowserDesc_SetActions( void* DataBrowserDesc,char* actions );
0AAC: 00000000 716E0411 ; 2AB: void DataBrowserDesc_SetSelectAction( void* DataBrowserDesc, int state );
0AB0: 00000000 796E0411 ; 2AC: void DataBrowserDesc_SetSelectActionOnFolders( void* DataBrowserDesc,int state );
0AB4: 00000000 556E0411 ; 2AD: void DataBrowserDesc_SetBookID( void* DataBrowserDesc, int BookID);
0AB8: 00000000 F96D0411 ; 2AE: void DataBrowserDesc_SetItemFilter( void* DataBrowserDesc, DB_FILE_FILTER );
0ABC: 00000000 256F0411 ; 2AF: void DataBrowserDesc_SetOption( void* DataBrowserDesc, char* option );
0AC0: 00000000 8D6F0411 ; 2B0: void DataBrowserDesc_SetOpenEmptyFolder( void* DataBrowserDesc,int state );
0AC4: 00000000 016E0411 ; 2B1: void DataBrowserDesc_SetFileExtList( void* DataBrowserDesc, const wchar_t* ExtList );
0AC8: 00000000 D1FE0411 ; 2B2: void FSX_RemoveIllegalSymbolsName( FILEITEM* );
0ACC: 00000000 E9F80411 ; 2B3: FILEITEM* FILEITEM_Create( void );
0AD0: 00000000 19FA0411 ; 2B4: void FILEITEM_Destroy( FILEITEM* );
0AD4: 00000000 01756C11 ; 2B5: GUI* CreateDateInputVA( int zero, ... );
0AD8: 00000000 798D6C11 ; 2B6: GUI* CreateTimeInputVA( int zero, ... );
0ADC: 00000000 A59C6411 ; 2B7: void StringInput_SetCursorPosition( GUI*, u16 curs_pos,char unk );
0AE0: 00000000 9D5D6111 ; 2B8: void BookObj_CallPage( BOOK* book, const PAGE_DESC* page );
0AE4: 00000000 71776C11 ; 2B9: unsigned int DateInput_GetDateInt( GUI* );
0AE8: 00000000 41906C11 ; 2BA: unsigned int TimeInput_GetTimeInt( GUI* );
0AEC: 00000000 B85A282A ;82BB: FONT_DESC* GetFontDesc( void );
0AF0: 00000000 285E282A ;82BC: int* GetFontCount( void );
0AF4: 00000000 55806B11 ; 2BD: int GC_GetBrushColor( GC* gc );
0AF8: 00000000 15806B11 ; 2BE: void GC_SetBrushColor( GC* gc, int brush_color );
0AFC: 00000000 C98B6B11 ; 2BF: void GC_DrawRoundRect( GC* gc, RECT*, int arcWidth, int arcHeight, int border_flag, int fill_flag );
0B00: 00000000 759E6D11 ; 2C0: BOOK* MenuBook_Desktop( int mode,int BookID );
0B04: 00000000 C9946D11 ; 2C1: wchar_t* MenuBook_Desktop_GetSelectedItemID( BOOK * MenuBook_Desktop );
0B08: 00000000 1DE26C11 ; 2C2: void BookObj_SoftKeys_SetAction( BOOK* book, int actionID, SKACTIONPROC proc );
0B0C: 00000000 55E26C11 ; 2C3: void BookObj_SoftKeys_SetText( BOOK* book, int actionID, TEXTID );
0B10: 00000000 D13F6111 ; 2C4: BOOK* FindBookByID( int BookID );
0B14: 00000000 0D866C11 ; 2C5: GUI_FEEDBACK* TextFeedbackWindow( BOOK* book, int zero );
0B18: 00000000 398A6C11 ; 2C6: void Feedback_SetKeyHook( GUI_FEEDBACK*, void(*hook)( BOOK* book, int key, int unk, int unk2 ) );
0B1C: 00000000 D9896C11 ; 2C7: void Feedback_SetOnClose( GUI_FEEDBACK*, void(*OnClose)( BOOK* book ) ) ;
0B20: 00000000 F1886C11 ; 2C8: void Feedback_SetTimeout( GUI_FEEDBACK*, int time_ms );
0B24: 00000000 9D8A6C11 ; 2C9: void Feedback_SetTextExtended( GUI_FEEDBACK*, TEXTID text, int where );
0B28: 00000000 61736C11 ; 2CA: void TabMenuBar_SetOnTabSwitch( GUI_TABMENUBAR*, void (*proc) ( BOOK*, int act_tab ) );
0B2C: 00000000 95902611 ; 2CB: TEXTID KeyCode2Name( int key_code );
0B30: 00000000 B5A1FE10 ; 2CC: int ImageID_Get( const wchar_t* fpath, const wchar_t* fname, IMAGEID* );
0B34: 00000000 E5A7FE10 ; 2CD: void ImageID_Free( IMAGEID );
0B38: 00000000 85030311 ; 2CE: SUB_EXECUTE* DataBrowser_CreateSubExecute( int BookID, FILEITEM* );
0B3C: 00000000 050F0311 ; 2CF: int DataBrowser_ExecuteSubroutine(SUB_EXECUTE* sub, int action, u16* unk );
0B40: 00000000 C5FA0411 ; 2D0: int FILEITEM_SetFname( FILEITEM*, const wchar_t* fname );
0B44: 00000000 85FD0411 ; 2D1: int FILEITEM_SetPath( FILEITEM*, const wchar_t* fpath );
0B48: 00000000 7DFD0411 ; 2D2: wchar_t* FILEITEM_GetFname( FILEITEM* );
0B4C: 00000000 11FE0411 ; 2D3: wchar_t* FILEITEM_GetPath( FILEITEM* );
0B50: 00000000 25FB0411 ; 2D4: int FILEITEM_SetFnameAndContentType( FILEITEM*, const wchar_t* fname );
0B54: 00000000 E9FD0411 ; 2D5: int FILEITEM_SetPathAndContentType( FILEITEM*, const wchar_t* fpath );
0B58: 00000000 39A60111 ; 2D6: int JavaDialog_Open( int unk1, char* unk2, void** JavaDesc );
0B5C: 00000000 15DD0111 ; 2D7: void JavaDialog_Close( int unk1 );
0B60: 00000000 D9DE0111 ; 2D8: int JavaAppDesc_Get( int unk1, void** JavaDesc );
0B64: 00000000 45060111 ; 2D9: int JavaAppDesc_GetFirstApp( void* JavaDesc );
0B68: 00000000 4D060111 ; 2DA: int JavaAppDesc_GetNextApp( void* JavaDesc );
0B6C: 00000000 51010111 ; 2DB: int JavaAppDesc_GetJavaAppInfo( void* JavaDesc,int ID, wchar_t** wstr );
0B70: 00000000 D11BA5ED ; 2DC: void OrangeLED_Control( int _free_val, int or_LED_ID, int level, int fade_time );
0B74: 00000000 41F26A11 ; 2DD: void DispObject_SetRefreshTimer( DISP_OBJ*, int time );
0B78: 00000000 BDF26A11 ; 2DE: void DispObject_KillRefreshTimer( DISP_OBJ* );
0B7C: 00000000 B13A0411 ; 2DF: int IsDataBrowserBook( BOOK* book );
0B80: 00000000 B1F20311 ; 2E0: SUB_EXECUTE* BrowserItem_Get_SUB_EXECUTE( BOOK * BrowserItemBook );
0B84: 00000000 DD516E11 ; 2E1: TEXTID Shortcut_Get_MenuItemName( void* );
0B88: 00000000 65A06D11 ; 2E2: IMAGEID Shortcut_Get_MenuItemIconID( void* );
0B8C: 00000000 65406111 ; 2E3: BOOK* FindBookEx( int(*cmp_proc)( BOOK* book_from_list, int* param), int* param );
0B90: 00000000 19F90411 ; 2E4: FILEITEM* FILEITEM_CreateCopy(FILEITEM* );
0B94: 00000000 A1A7FE10 ; 2E5: IMAGEID ImageID_Copy( IMAGEID );
0B98: 00000000 E1646111 ; 2E6: int BookObj_GetSessionID( BOOK * book );
0B9C: 00000000 914D6111 ; 2E7: void UI_Event_toSID( int event, int sess_id );
0BA0: 00000000 D11BA5ED ; 2E8: char* GetIMSI( void );
0BA4: 00000000 EDDB6111 ; 2E9: void UI_CONTROLLED_SHUTDOWN_RESPONSE( int book_id );
0BA8: 00000000 D11BA5ED ; 2EA: int MainInput_getCurPos( GUI* );
0BAC: 00000000 49046E11 ; 2EB: void MainInput_Hide( GUI* );
0BB0: 00000000 B1FD6C11 ; 2EC: void DispObject_SoftKeys_RestoreDefaultAction( DISP_OBJ*, int action );
0BB4: 00000000 ED9DF710 ; 2ED: TEXTID PNUM2Name( BCD_TEXT pnum, int isIconNeeded, int only_full_number_flag );
0BB8: 00000000 D5A7F910 ; 2EE: int SpeedDial_GetPNUM( int _zero, char charter0__9, void* PNUM );
0BBC: 00000000 D11BA5ED ; 2EF: void* MetaData_Desc_Create( wchar_t* path, wchar_t* name );
0BC0: 00000000 D11BA5ED ; 2F0: void MetaData_Desc_Destroy( void* MetaData_Desc );
0BC4: 00000000 D11BA5ED ; 2F1: wchar_t* MetaData_Desc_GetTags( void* MetaData_Desc, int tagID );
0BC8: 00000000 D11BA5ED ; 2F2: int MetaData_Desc_GetTrackNum( void* MetaData_Desc, int __NULL );
0BCC: 00000000 D1096B11 ; 2F3: int DispObject_GetWindowWidth( DISP_OBJ* );
0BD0: 00000000 F1096B11 ; 2F4: int DispObject_GetWindowHeight( DISP_OBJ* );
0BD4: 00000000 F9E56211 ; 2F5: int get_system_langID( void );
0BD8: 00000000 ED837011 ; 2F6: char* lang_get_name( int langID );
0BDC: 00000000 34F30910 ; 2F7: int w_chdir( const wchar_t* path );
0BE0: 00000000 ED8B7E10 ; 2F8: int w_fopen( const wchar_t* name, int attr, int rights, int err );
0BE4: 00000000 A58C7E10 ; 2F9: int w_fstat( const wchar_t* name, W_FSTAT* );
0BE8: 00000000 358C7E10 ; 2FA: int w_fwrite( int f, void* buf, int size );
0BEC: 00000000 1D8C7E10 ; 2FB: int w_fread( int f, void* buf, int size );
0BF0: 00000000 D5E74311 ; 2FC: int w_lseek( int f, int offs, int mode );
0BF4: 00000000 4D8C7E10 ; 2FD: int w_fclose( int f );
0BF8: 00000000 C8EA0910 ; 2FE: int w_mkdir( const wchar_t* path, int mode );
0BFC: 00000000 E5E0FF10 ; 2FF: int DirHandle_SetFilterStr( DIR_HANDLE*, const wchar_t* filter );
0C00: 00000000 153C6B11 ; 300: int Disp_GetTextIDWidth( TEXTID , int len );
0C04: 00000000 D11BA5ED ; 301: int MetaData_Desc_GetCoverInfo( void* MetaData_Desc, char* cover_type, int* size, int* cover_offset );
0C08: 00000000 2DA2FE10 ; 302: int ImageID_GetIndirect( void* buf_image,int size,int __NULL, wchar_t* image_type, wchar_t* imageID );
0C0C: 00000000 2D601F11 ; 303: void unixtime2datetime( int, DATETIME * );
0C10: 00000000 F9F54311 ; 304: int List_Insert( LIST* lst, int i, void* item);
0C14: 00000000 490A0011 ; 305: int FileCopy( wchar_t* src_path, wchar_t* src_name, wchar_t* dest_path, wchar_t* dest_name, int );
0C18: 00000000 850C0011 ; 306: int FileMove( wchar_t* src_path, wchar_t* src_name, wchar_t* dest_path, wchar_t* dest_name, int );
0C1C: 00000000 D11BA5ED ; 307: void RedLED_On( int __NULL );
0C20: 00000000 D11BA5ED ; 308: void RedLED_Off( int __NULL );
0C24: 00000000 DD166B11 ; 309: void DispObject_SetLayerColor( DISP_OBJ*,int color );
0C28: 00000000 35DE0111 ; 30A: int JavaAppDesc_GetJavaAppID( void* JavaDesc );
0C2C: 00000000 555F1011 ; 30B: void REQUEST_UI_OAF_START_APPLICATION( const int* sync, int appID, char* flag );
0C30: 00000000 E5A90F11 ; 30C: int JavaApp_LogoImageID_Get( wchar_t* fullpath, wchar_t* imageID );
0C34: 00000000 397C6C11 ; 30D: GUI* CreateProgressBar( BOOK* book, int display );
0C38: 00000000 517F6C11 ; 30E: void ProgressBar_SetText( GUI*, TEXTID text );
0C3C: 00000000 6D806C11 ; 30F: void ProgressBar_SetIcon( GUI*, u16 icon_id );
0C40: 00000000 0D7F6C11 ; 310: void ProgressBar_SetPercentValue(GUI*,int value );
0C44: 00000000 7D806C11 ; 311: void ProgressBar_SetBarDisabled( GUI*, BOOL );
0C48: 00000000 85EF6311 ; 312: void StringInput_DispObject_SetText( DISP_OBJ*, TEXTID );
0C4C: 00000000 D11BA5ED ; 313: void GUIObject_SetTitleBackgroundImage( GUI*, IMAGEID );
0C50: 00000000 45A76B11 ; 314: void GUIObject_SetTitleIcon( GUI*, IMAGEID );
0C54: 00000000 D11BA5ED ; 315: void GUIObject_SetCursorImage( GUI*, IMAGEID );
0C58: 00000000 D11BA5ED ; 316: void GUIObject_SetBackgroundImage( GUI*, IMAGEID );
0C5C: 00000000 79106D11 ; 317: void* DispObject_SoftKeys_GetParams(DISP_OBJ* );
0C60: 00000000 BD106D11 ; 318: LIST* DispObject_SoftKeys_GetList( DISP_OBJ*, BOOK* book, char __zero );
0C64: 00000000 7D666111 ; 319: int BookObj_GetDisplayOrientation( BOOK* book );
0C68: 00000000 15666111 ; 31A: void BookObj_SetDisplayOrientation( BOOK* book, int orientation );
0C6C: 00000000 995A6111 ; 31B: BOOK* Display_GetTopBook( int display );
0C70: 00000000 D11BA5ED ; 31C: void Display_SetBrightness( int display, int brightness );
0C74: 00000000 F1866311 ; 31D: int Display_GetBrightness( int display );
0C78: 00000000 5D6E0411 ; 31E: void DataBrowserDesc_Menu_AddFSFunctions( void* DataBrowserDesc , int );
0C7C: 00000000 B96E0411 ; 31F: void DataBrowserDesc_Menu_AddNewFolder( void* DataBrowserDesc , int );
0C80: 00000000 C16E0411 ; 320: void DataBrowserDesc_Menu_AddMarkFiles( void* DataBrowserDesc , int );
0C84: 00000000 714A6D11 ; 321: void SetTheme( wchar_t* path, wchar_t* name, int bookid, int unk_1 );
0C88: 00000000 FD336D11 ; 322: void SoftKeys_GetLabel( DISP_OBJ* softkeys, SKLABEL* lbl, int id );
0C8C: 00000000 11306D11 ; 323: void SoftKeys_Update( DISP_OBJ* softkeys );
0C90: 00000000 15ED7611 ; 324: int get_CellData( PLMN_LAC_DESC * desc1, RAT_CI_DESC * desc2, char * CSReg );
0C94: 00000000 8D08F510 ; 325: void* IncommingCall_Reject( BOOK* book );
0C98: 00000000 551CF510 ; 326: void* IncommingCall_Mute( BOOK* book );
0C9C: 00000000 D11BA5ED ; 327: int GetRadioState( char* level, char* flag );
0CA0: 00000000 E9B6F110 ; 328: int Bluetooth_GetState( void );
0CA4: 00000000 B1B6F110 ; 329: int Bluetooth_GetPhoneVisibility( void );
0CA8: 00000000 71B7F110 ; 32A: int Bluetooth_isBusy( void );
0CAC: 00000000 F1854511 ; 32B: int USB_isConnected( void );
0CB0: 00000000 DCF20910 ; 32C: void* w_diropen( const wchar_t* dir);
0CB4: 00000000 65EE4311 ; 32D: wchar_t* w_dirread( void* );
0CB8: 00000000 1CF30910 ; 32E: int w_dirclose( void* );
0CBC: 00000000 01EF4311 ; 32F: int w_rename( const wchar_t* dst, const wchar_t* src );
0CC0: 00000000 B5EE4311 ; 330: int w_remove( const wchar_t* dir );
0CC4: 00000000 D11BA5ED ; 331: int ConnectionManager_Connection_GetState( void );
0CC8: 00000000 D11BA5ED ; 332: int GetSignalQuality( char* rssi, char* ber );
0CCC: 00000000 A5165011 ; 333: int IsCameraBook( BOOK* bk );
0CD0: 00000000 65830D11 ; 334: int IsSoundRecorderBook( BOOK* bk );
0CD4: 00000000 AD9D6411 ; 335: void StringInput_MenuItem_SetPriority( GUI* strinp, int prio, int actionID );
;0CD8: xxxxxxxx yyyyyyyy ; 336: void VideoPlayerControl( BOOK* VideoPlayerBook, int );
0CDC: 00000000 4D985F11 ; 337: void Video_ActionBack( BOOK* VideoPlayerBook, void* );
0CE0: 00000000 FD9F5F11 ; 338: void Video_ExtractFrame( BOOK* VideoPlayerBook, void* );
0CE4: 00000000 1D985F11 ; 339: void Video_ZoomOn( BOOK* VideoPlayerBook, void* );
0CE8: 00000000 C13B6E11 ; 33A: void RightNow_SetActive( int flag );
;0CEC: xxxxxxxx yyyyyyyy ; 33B: void VideoResize_AutomateMode( BOOK* VideoPlayerBook, u16 VideoWidth, u16 VideoHeight, u16* NewWidth, u16* NewHeight );
;0CF0: xxxxxxxx yyyyyyyy ; 33C: void VideoResize_AllScreenMode( BOOK* VideoPlayerBook, u16 VideoWidth, u16 VideoHeight, u16* NewWidth, u16* NewHeight );
;0CF4: xxxxxxxx yyyyyyyy ; 33D: int Video_GetCurrentSkinID( BOOK* VideoPlayerBook );
;0CF8: xxxxxxxx yyyyyyyy ; 33E: void Video_SetSkin( GUI* VideoPlayerGUI, int skinID );
;0CFC: xxxxxxxx yyyyyyyy ; 33F: int Video_SetPermit( BOOK* VideoPlayerBook, u16 NewWidth, u16 NewHeight );
;0D00: xxxxxxxx yyyyyyyy ; 340: int Video_Refresh( BOOK* VideoPlayerBook, GUI* VideoPlayerGUI );
0D04: 00000000 55975F11 ; 341: void Video_Play( BOOK* VideoPlayerBook, void* );
0D08: 00000000 65975F11 ; 342: void Video_Pause( BOOK* VideoPlayerBook, void* );
;0D0C: xxxxxxxx yyyyyyyy ; 343: void Video_Stop( BOOK* VideoPlayerBook, void* );
0D10: 00000000 55B75C11 ; 344: void Audio_Pause( BOOK* );
0D14: 00000000 D1B65C11 ; 345: void Audio_Play( BOOK* );
0D18: 00000000 91786C11 ; 346: GUI* CreatePercentInputVA( int zero, ... );
0D1C: 00000000 1D7A6C11 ; 347: int PercentInput_GetPercent( GUI* PercentInput );
0D20: 00000000 B5C16611 ; 348: void GUIonMessage_SetLineSeparator( GUI_MESSAGE* msg, int _unk1 );
0D24: 00000000 31926311 ; 349: int PHF_GetState( void );
0D28: 00000000 39926311 ; 34A: int CHF_GetState( void );
0D2C: 00000000 513E6D11 ; 34B: void GUIObject_SoftKeys_RemoveBackground( GUI* );
0D30: 00000000 5D3E6D11 ; 34C: void GUIObject_SoftKeys_RestoreBackground( GUI* );
0D34: 00000000 ED9F6A11 ; 34D: void SetTrayIcon( IMAGEID, char mode );
0D38: 00000000 3D2C7B11 ; 34E: int REQUEST_SETTING_RINGVOLUME_SET( const int* sync, int unk, int null, int vol );
0D3C: 00000000 192E7B11 ; 34F: int REQUEST_SETTING_VIBRATOR_SET( const int* sync, int unk, int mode );
0D40: 00000000 812D7B11 ; 350: int REQUEST_SETTING_RINGTYPESOUNDFILE_SET( const int* sync, int null, wchar_t* path, wchar_t* name );
0D44: 00000000 FD317B11 ; 351: int REQUEST_SETTING_ANSWERINGMODE_SET( const int* sync, int unk, int mode );
0D48: 00000000 F92C7B11 ; 352: int REQUEST_SETTING_INCREASINGRING_SET( const int* sync, int unk, int unk2, int mode );
0D4C: 00000000 25307B11 ; 353: int REQUEST_SETTING_ALLOWEDCALLERS_SET( const int* sync, int unk, int mode );
0D50: 00000000 B9F60011 ; 354: int JavaAppDesc_GetJavaAppFullpath( void* JavaDesc, JavaAppFullpath* );
0D54: 00000000 A1780D11 ; 355: void* SoundRecorderDesc_Create( void );
0D58: 00000000 FD780D11 ; 356: void SoundRecorderDesc_Destroy( void* desc );
0D5C: 00000000 19790D11 ; 357: int SoundRecorderDesc_SetBookID( void* desc, int BookID );
0D60: 00000000 45790D11 ; 358: int SoundRecorderDesc_SetType( void* desc, const int type );
0D64: 00000000 59790D11 ; 359: int SoundRecorderDesc_SetFolder( void* desc, const wchar_t* fpath );
0D68: 00000000 75790D11 ; 35A: int SoundRecorderDesc_SetFname( void* desc, const wchar_t* fname );
0D6C: 00000000 91790D11 ; 35B: int SoundRecorderDesc_SetRecordSize( void* desc, const int size );
0D70: 00000000 097A0D11 ; 35C: int SoundRecorder_Create( void* desc );
0D74: 00000000 ED53F410 ; 35D: int SoundRecorder_RecordCall( BOOK* OngoingCallBook );
0D78: 00000000 2DB5FB10 ; 35E: int Browser_OpenURI( BOOK* book, char* URI, int mode );
0D7C: 00000000 15164C11 ; 35F: char* GetURIScheme( int schemeID );
0D80: 00000000 B11A4C11 ; 360: char* CreateURI( wchar_t* fpath, wchar_t* fname, char* URIScheme );
0D84: 00000000 DD6E0411 ; 361: void DataBrowserDesc_SetViewModeAndSortOrder( void* DataBrowserDesc, int view_sort_ID );
0D88: 00000000 E122ED10 ; 362: int Alarm_GetCurrentTypeAndAlarmID( char* type, wchar_t* AlarmID );
0D8C: 00000000 910CED10 ; 363: int Alarm_GetState( char* state, int AlarmID );
0D90: 00000000 E91AED10 ; 364: int Alarm_GetTIME( TIME* AlarmTime, int AlarmID );
0D94: 00000000 792AED10 ; 365: int Alarm_GetWeekSettings( void* week, int AlarmID );
;0D98: xxxxxxxx yyyyyyyy ; 366: int IrDa_GetState( char* state );
0D9C: 00000000 C92F7B11 ; 367: void REQUEST_SETTING_ALLOWEDCALLERS_GET( const int* sync, int ProfileNum, char* state );
0DA0: 00000000 4D07F510 ; 368: void* IncommingCall_Accept( BOOK* book );
0DA4: 00000000 91085D11 ; 369: void MediaPlayer_SoftKeys_SetText( GUI* player_gui, int actionID , TEXTID );
0DA8: 00000000 49085D11 ; 36A: void MediaPlayer_SoftKeys_SetAction( GUI* player_gui, int actionID, SKACTIONPROC proc );
0DAC: 00000000 F1085D11 ; 36B: void MediaPlayer_SoftKeys_SetItemAsSubItem( GUI* player_gui, int item, int subitem );
0DB0: 00000000 21095D11 ; 36C: void MediaPlayer_SoftKeys_AddHelpStr( GUI* player_gui, int item, TEXTID );
;0DB4: xxxxxxxx yyyyyyyy ; 36D: void MediaPlayer_ShowNowPlaying(DISP_OBJ*, int );
0DB8: 00000000 F9F46A11 ; 36E: void DispObject_Show(DISP_OBJ*, int mode );
0DBC: 00000000 89F10310 ; 36F: int Request_EventChannel_Subscribe( const int* sync, int mode, int event );
0DC0: 00000000 193E6D11 ; 370: void GUIObject_SoftKeys_ExecuteAction( GUI*, u16 actionID );
0DC4: 00000000 19689D10 ; 371: int Request_ICA_ShutdownAllConnections( const int* sync );
0DC8: 00000000 75367B11 ; 372: int REQUEST_PROFILE_GETPROFILENAME( const int* sync,int unk, TEXTID_DATA*, char* error );
0DCC: 00000000 956F0411 ; 373: int DataBrowserDesc_SetFocusToFILEITEM( void* DataBrowserDesc, FILEITEM* );
0DD0: 00000000 CDC06611 ; 374: int GUIonMessage_GetMsg( GUI_MESSAGE* msg );
0DD4: 00000000 D5C06611 ; 375: BOOK* GUIonMessage_GetBook( GUI_MESSAGE* msg );
0DD8: 00000000 D1C06611 ; 376: GUI* GUIonMessage_GetGui( GUI_MESSAGE* msg );
0DDC: 00000000 D9C06611 ; 377: int GUIonMessage_GetSelectedItem( GUI_MESSAGE* msg );
0DE0: 00000000 E5C06611 ; 378: int GUIonMessage_GetPrevSelectedItem( GUI_MESSAGE* msg );
0DE4: 00000000 E165F710 ; 379: void ObexSendFile( SEND_OBEX_STRUCT* );
0DE8: 00000000 B92A6C11 ; 37A: void Feedback_SetManualScrollingText( DISP_OBJ* feedback_disp_obj, int state );
0DEC: 00000000 E5C01D11 ; 37B: int EqualizerGain_Set( int AudioSessionID,int Band, int Level );
0DF0: 00000000 7D935E10 ; 37C: int CANVAS_Get_GviGC( PCANVAS pcanvas, GVI_GC* dest );
0DF4: 00000000 95536910 ; 37D: void GVI_BitBlt( GVI_GC destgc, int destx, int desty, int destxsize, int destysize, GVI_GC srcgc, int srcx, int srcy, int _204, int _0, int _0_2, int _0_3 );
0DF8: 00000000 09556910 ; 37E: void GVI_StretchBlt( GVI_GC destgc, int destx, int desty, int destxsize, int destysize, GVI_GC srcgc, int srcx, int srcy, int srcxsize, int srcysize, int _204, int _0, int _0_2, int _0_3 );
0DFC: 00000000 C5556910 ; 37F: void GVI_TransformBlt( GVI_GC destgc, int destx, int desty, GVI_GC srcgc, int srcx, int srcy, int srcxsize, int srcysize, int orientation, int _0 );
0E00: 00000000 3D466910 ; 380: GVI_PEN GVI_CreatePen( char thikness, int color );
0E04: 00000000 81466910 ; 381: GVI_PEN GVI_CreateDashedPen( char thikness, int color, int bitmask, int step, int offset );
0E08: 00000000 4D456910 ; 382: GVI_BRUSH GVI_CreateSolidBrush( int color );
0E0C: 00000000 1D3F6910 ; 383: BOOL GVI_Delete_GVI_Object( GVI_OBJ* );
0E10: 00000000 CD4C6910 ; 384: void GVI_DrawEllipse(GVI_GC gc, int x1, int y1, int x2, int y2, GVI_PEN pen );
0E14: 00000000 A95B6910 ; 385: void GVI_DrawLine( GVI_GC gc, int x1, int y1, int x2, int y2, GVI_PEN pen );
0E18: 00000000 39626910 ; 386: void GVI_DrawLines( GVI_GC gc, POINT* points, int count, GVI_PEN pen );
0E1C: 00000000 BD626910 ; 387: void GVI_DrawPolyLine( GVI_GC gc, POINT* points, int count, GVI_PEN pen, int is_closed );
0E20: 00000000 39656910 ; 388: void GVI_DrawRectangle( GVI_GC gc, int x, int y, int w, int h, GVI_PEN pen );
0E24: 00000000 E9516910 ; 389: void GVI_DrawRoundRect( GVI_GC gc, int x, int y, int w, int h, int arcw, int arch, GVI_PEN pen );
0E28: 00000000 FD5D6910 ; 38A: void GVI_DrawSolidLines(GVI_GC gc, POINT* points, int count, int color, int width );
0E2C: 00000000 05606910 ; 38B: void GVI_DrawSolidPolyLine( GVI_GC gc, POINT* points, int count, int is_closed, int color, int width );
0E30: 00000000 A9606910 ; 38C: void GVI_DrawSolidRectangle( GVI_GC gc, int x, int y, int w, int h, int color, int width );
0E34: 00000000 B5506910 ; 38D: void GVI_FillEllipse( GVI_GC gc, int x, int y, int w, int h, GVI_BRUSH brush );
0E38: 00000000 615A6910 ; 38E: void GVI_FillPolygon( GVI_GC gc, POINT *pp, int count, GVI_BRUSH brush );
0E3C: 00000000 B9636910 ; 38F: void GVI_FillRectangle( GVI_GC gc, int x, int y, int w, int h, GVI_BRUSH brush );
0E40: 00000000 45646910 ; 390: void GVI_FillRectangles( GVI_GC gc, GVI_XYWH *rcs, int count, GVI_BRUSH brush );
0E44: 00000000 61516910 ; 391: void GVI_FillSolidEllipse( GVI_GC gc, int x1, int y1, int x2, int y2, int color );
0E48: 00000000 C1646910 ; 392: void GVI_FillSolidRectangle( GVI_GC gc, int x, int y, int w, int h, int color );
0E4C: 00000000 39536910 ; 393: int GVI_FillSolidRoundRect( GVI_GC , int x, int y, int w, int h, int arcx, int arcy, int color );
0E50: 00000000 ED596910 ; 394: void GVI_FillSolidTriangle( GVI_GC gc, int x1, int y1, int x2, int y2, int x3, int y3, int color );
0E54: 00000000 31776B11 ; 395: GC* GC_CreateMemoryGC( int xsize, int ysize, int bpp, int unk, void* somefn, int unk2) ;
0E58: 00000000 F5776B11 ; 396: void GC_FreeGC( GC* gc );
;0E5C: xxxxxxxx yyyyyyyy ; 397: void REQUEST_ALARMCLOCKSTATUS_GET( const int* sync, char* alarm_status );
;0E60: xxxxxxxx yyyyyyyy ; 398: void REQUEST_ALARMCLOCKTIME_GET( const int* sync, TIME* t );
;0E64: xxxxxxxx yyyyyyyy ; 399: void REQUEST_ALARMDATEANDTIMESTATUS_GET( const int* sync, DATETIME* );
0E68: 00000000 C513F710 ; 39A: int Settings_ShowNumber_Get( char* state );
0E6C: 00000000 39476910 ; 39B: GVI_BMP GVI_CreateBitmap( int xsize, int ysize, int bpp );
0E70: 00000000 9D666910 ; 39C: GVI_GC GVI_CreateMemoryGC( GVI_BMP bitmap );
0E74: 00000000 D9226C10 ; 39D: void GVI_DeleteMemoryGC( GVI_GC gc );
0E78: 00000000 19336411 ; 39E: int StringInput_DispObject_SetLanguage( DISP_OBJ_STRING_INPUT*, int langID, int flag );
0E7C: 00000000 41F74311 ; 39F: int List_InsertSorted( LIST* list, void* item, int(*cmp_proc)( void*, void* ) );
0E80: 00000000 EDB86611 ; 3A0: int ListMenu_SetItemIcon( GUI_LIST*, int Item, wchar_t unk_FFFF, int mode, IMAGEID );
0E84: 00000000 9512FF10 ; 3A1: void wstrnupr( wchar_t* wstr, int maxlen );
0E88: 00000000 25D63211 ; 3A2: void wstrnlwr( wchar_t* wstr, int maxlen );
0E8C: 00000000 35BD6611 ; 3A3: int ListMenu_SetItemTextScroll( GUI_LIST*, int scroll );
0E90: 00000000 D11BA5ED ; 3A4: void GUIObject_SetTitleTextColor( GUI*, int color );
0E94: 00000000 15CC6611 ; 3A5: void GUIObject_SetListTextColor( GUI*, int unk1, int list_color, int unk2, int unk3, int list_select_color,int unk4, int _zerro);
0E98: 00000000 71E56A11 ; 3A6: void DispObject_SetTitleTextColor( DISP_OBJ*, int color);
0E9C: 00000000 89FE6511 ; 3A7: void DispObject_SetListTextColor( DISP_OBJ*, int unk1, int list_color, int unk2, int unk3, int list_select_color, int unk4, int _zerro);
0EA0: 00000000 6DFE6511 ; 3A8: void DispObject_SetCursorImage( DISP_OBJ*, IMAGEID );
;0EA4: xxxxxxxx yyyyyyyy ; 3A9: void DispObject_SetBackgroundImage( DISP_OBJ*, IMAGEID );
0EA8: 00000000 99E46A11 ; 3AA: void DispObject_SetTitleBackgroundImage( DISP_OBJ*, IMAGEID );
0EAC: 00000000 4D736C11 ; 3AB: void TabMenuBar_SetTabTitle( GUI_TABMENUBAR*, int tab_num, TEXTID );
0EB0: 00000000 69A06B11 ; 3AC: BOOK* GUIObject_GetBook( GUI* );
0EB4: 00000000 E9FC6C11 ; 3AD: u16 SoftKeys_GetSelectedAction( void );
0EB8: 00000000 A5D26111 ; 3AE: void MonitorFeedback_SetTimer( GUI_FEEDBACK*, int time, void(*callback)(BOOK*) );
0EBC: 00000000 51B46611 ;83AF: void (*getListMenuOnGuiDestroy())( GUI* );
0EC0: 00000000 EDB76511 ;83B0: void (*getListMenuOnDescCreate())( DISP_DESC* );
0EC4: 00000000 6DB46611 ;83B1: void (*getListMenuOnDispMessage())( DISP_OBJ*, void*, GUI* );
0EC8: 00000000 B1716C11 ;83B2: void (*getTabMenuBarOnGuiDestroy())( GUI* );
0ECC: 00000000 BDDC6B11 ;83B3: void (*getTabMenuBarOnDescCreate())( DISP_DESC* );
0ED0: 00000000 01716C11 ;83B4: void (*getTabMenuBarOnDispMessage())( DISP_OBJ*, void*, GUI* );
0ED4: 00000000 B1D76611 ;83B5: void (*getOneOfManyOnGuiDestroy())( GUI* );
0ED8: 00000000 11186611 ;83B6: void (*getOneOfManyOnDescCreate())( DISP_DESC* );
0EDC: 00000000 CDD76611 ;83B7: void (*getOneOfManyOnDispMessage())( DISP_OBJ*, void*, GUI* );
0EE0: 00000000 11D26611 ;83B8: void (*getNOfManyOnGuiDestroy())( GUI* );
0EE4: 00000000 AD0C6611 ;83B9: void (*getNOfManyOnDescCreate())( DISP_DESC* );
0EE8: 00000000 2DD26611 ;83BA: void (*getNOfManyOnDispMessage())( DISP_OBJ*, void*, GUI* );
0EEC: 00000000 B9BA6611 ; 3BB: void ListMenu_DestroyItems( GUI_LIST* );
0EF0: 00000000 D10C6B11 ; 3BC: void DispObject_SetScrollBarBackgroundColor( DISP_OBJ*, int color );
0EF4: 00000000 A90C6B11 ; 3BD: void DispObject_SetScrollBarColor( DISP_OBJ*, int color );
0EF8: 00000000 81026D11 ; 3BE: void DispObject_SetSoftkeysColor( DISP_OBJ*, int color );
0EFC: 00000000 51946C11 ; 3BF: void YesNoQuestion_SetIcon( GUI*, IMAGEID );
0F00: 00000000 45A36B11 ; 3C0: void GUIObject_SetBacklightTimeout( GUI*, int time );
0F04: 00000000 31B76611 ; 3C1: void ListMenu_SetHotkeyMode( GUI_LIST*, LISTMENU_HOTKEY_MODE );
0F08: 00000000 19BC6611 ; 3C2: void ListMenu_SetSearchLanguageMode( GUI_LIST*, int mode );
0F0C: 00000000 41BC6611 ; 3C3: void ListMenu_EnableSearchHeader( GUI_LIST*, BOOL );
0F10: 00000000 EDC26611 ; 3C4: wchar_t* GUIonMessage_GetSearchString( GUI_MESSAGE* msg );
0F14: 00000000 0DC36611 ; 3C5: int GUIonMessage_GetSearchStringLength( GUI_MESSAGE* msg );
0F18: 00000000 BDC01D11 ; 3C6: int EqualizerGain_Get( int AudioSessionID, int Band, int* Level );
0F1C: 00000000 A1876D11 ; 3C7: int Theme_DestroyMenuIcons( void );
0F20: 00000000 F1947111 ; 3C8: void CoCreateInstance( PUUID cid, PUUID iid, void** pInterface );
0F24: 00000000 29A76B11 ; 3C9: void GUIObject_SetSecondRowTitleText( GUI*, TEXTID );
0F28: 00000000 09B66611 ; 3CA: int ListMenu_GetItemCount( GUI_LIST* );
0F2C: 00000000 F9551F11 ; 3CB: void OSE_GetShell( void** pInterface );
0F30: 00000000 5D315510 ; 3CC: int swscanf( const wchar_t* buffer, const wchar_t* format, ... );
0F34: 00000000 65820A10 ; 3CD: int sscanf( const char* buffer, const char* format, ... );
0F38: 00000000 21626111 ; 3CE: void BookObj_WindowSetWantsFocus( BOOK* book, int display, BOOL WantsFocus );
0F3C: 00000000 ED656111 ; 3CF: void BookObj_StayOnTop( BOOK* book, int mode );
0F40: 00000000 59096B11 ; 3D0: void DispObject_WindowSetPosition( DISP_OBJ*, int x, int y );
0F44: 00000000 C5086B11 ; 3D1: void DispObject_WindowSetSize( DISP_OBJ*, int w, int h );
0F48: 00000000 D5316C11 ; 3D2: TEXTID Feedback_DispObject_GetText( DISP_OBJ* );
0F4C: 00000000 F1FF6C11 ; 3D3: void DispObject_SoftKeys_ExecuteAction( DISP_OBJ*, u16 actionID );
0F50: 00000000 25310411 ; 3D4: LIST* DataBrowserBook_GetCurrentFoldersList( BOOK* DataBrowserBook );
0F54: 00000000 95176B11 ; 3D5: void DispObject_SetAnimation( DISP_OBJ*, int style );
0F58: 00000000 85A26B11 ; 3D6: void GUIObject_SetZOrder( GUI*, char, GUI* );
0F5C: 00000000 2D6B6311 ; 3D7: int StringInput_GetCursorPosition( GUI*, u16* pos, char* _zero );
0F60: 00000000 9D244C11 ; 3D8: void str2PNUM( BCD_TEXT pnum, char* str, int len, int max_len );
0F64: 00000000 9559F910 ; 3D9: void pb_ui_search_bk_create_search_menu( int BookID, int mode );
0F68: 00000000 05736A11 ; 3DA: void ThemeImage_Delete( void );
;0F6C: xxxxxxxx yyyyyyyy ; 3DB:
;0F70: xxxxxxxx yyyyyyyy ; 3DC:
0F74: 00000000 513C6D11 ; 3DD: void GUIObject_SoftKeys_SubActionPressedNotification( GUI*, u16 actionID, BOOL );
;0F78: xxxxxxxx yyyyyyyy ; 3DE:
;0F7C: xxxxxxxx yyyyyyyy ; 3DF:
;0F80: xxxxxxxx yyyyyyyy ; 3E0: int fs_demand_cache_page( int virtAddr, int mode, int intrMask );
;0F84: xxxxxxxx yyyyyyyy ; 3E1: int fs_demand_pagePool_alloc_mem( pagePool* pagePool_p, int intrMask );
;0F88: xxxxxxxx yyyyyyyy ; 3E2: wchar_t fs_demand_get_page_i_from_queue( wchar_t* queue, char only_allocked_pool, int page_count );
;0F8C: xxxxxxxx yyyyyyyy ; 3E3: void fs_demand_remove_from_queue( pageCache* page_p_to_remove, wchar_t page_i_to_insert );
;0F90: xxxxxxxx yyyyyyyy ; 3E4: int fs_demand_kick_out_page( wchar_t page_i, int intrMask );
;0F94: xxxxxxxx yyyyyyyy ;83E5: char* getSWAP_DATA_BASE( void );





;locale=Russian_Russia.1251
